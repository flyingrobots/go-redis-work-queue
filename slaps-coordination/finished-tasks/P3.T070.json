{
  "task_id": "P3.T070",
  "created_at": "2025-09-14T19:41:47.146354Z",
  "task": {
    "id": "P3.T070",
    "feature_id": "F028",
    "title": "Implement Dlq Remediation Ui",
    "description": "Implement task for Dlq Remediation Ui",
    "boundaries": {
      "expected_complexity": {
        "value": "~ LoC",
        "breakdown": "Core logic (60%), Tests (25%), Integration (15%)"
      },
      "definition_of_done": {
        "criteria": [
          "All functions implemented per specification",
          "Unit tests passing with 80% coverage",
          "Integration tests passing",
          "Code reviewed and approved",
          "Documentation updated",
          "No linting errors",
          "Performance benchmarks met",
          "DLQ list is paginated with total count and filter.",
          "Peek shows pretty JSON and metadata.",
          "Requeue/Purge actions exist for selected items; purge all gated by confirm."
        ],
        "stop_when": "Core functionality complete; do NOT add extra features"
      },
      "scope": {
        "includes": [
          "internal/dlq-remediation-ui/",
          "internal/dlq-remediation-ui/*_test.go",
          "docs/api/dlq-remediation-ui.md"
        ],
        "excludes": [
          "UI unless specified",
          "deployment configs"
        ],
        "restrictions": "Follow existing code patterns and style guide"
      }
    },
    "execution_guidance": {
      "logging": {
        "format": "JSON Lines (JSONL)",
        "required_fields": [
          "timestamp",
          "task_id",
          "step",
          "status",
          "message"
        ],
        "optional_fields": [
          "percent",
          "data",
          "checkpoint"
        ],
        "status_values": [
          "start",
          "progress",
          "done",
          "error",
          "checkpoint"
        ]
      },
      "checkpoints": [
        {
          "id": "setup",
          "at_percent": 10,
          "description": "Module structure created"
        },
        {
          "id": "core",
          "at_percent": 40,
          "description": "Core logic implemented"
        },
        {
          "id": "integration",
          "at_percent": 60,
          "description": "Integration complete"
        },
        {
          "id": "tests",
          "at_percent": 80,
          "description": "Tests passing"
        },
        {
          "id": "docs",
          "at_percent": 100,
          "description": "Documentation complete"
        }
      ],
      "monitoring": {
        "metrics_to_track": [],
        "alerts": []
      }
    },
    "resource_requirements": {
      "estimated": {
        "cpu_cores": 1,
        "memory_mb": 1024,
        "disk_io_mbps": 10
      },
      "peak": {
        "cpu_cores": 2,
        "memory_mb": 2048,
        "disk_io_mbps": 50,
        "during": "compilation or testing"
      },
      "worker_capabilities_required": [
        "golang",
        "backend",
        "redis"
      ]
    },
    "scheduling_hints": {
      "priority": "medium",
      "preemptible": true,
      "retry_on_failure": true,
      "max_retries": 3,
      "checkpoint_capable": true
    },
    "duration": {
      "optimistic": 8,
      "mostLikely": 16,
      "pessimistic": 24
    },
    "shared_resources": {
      "exclusive_locks": [],
      "shared_limited": [
        {
          "resource": "test_redis",
          "quantity": 1
        }
      ],
      "creates": [],
      "modifies": []
    },
    "acceptance_checks": [
      {
        "type": "automated",
        "description": "DLQ list is paginated with total count and filter.",
        "script": "test_p3.t070.sh"
      },
      {
        "type": "automated",
        "description": "Peek shows pretty JSON and metadata.",
        "script": "test_p3.t070.sh"
      },
      {
        "type": "automated",
        "description": "Requeue/Purge actions exist for selected items; purge all gated by confirm.",
        "script": "test_p3.t070.sh"
      },
      {
        "type": "manual",
        "description": "Handles large DLQs without freezing the UI.",
        "script": null
      },
      {
        "type": "manual",
        "description": "API: list + count with filters",
        "script": null
      }
    ],
    "evidence": [
      {
        "type": "plan",
        "source": "docs/ideas/dlq-remediation-ui.md",
        "excerpt": "A focused DLQ tab to list, search, peek, requeue, and purge items safely with confirmations.\n\n> [!note]- **\ud83d\udde3\ufe0f CLAUDE'S THOUGHTS \ud83d\udcad**\n> THIS is what separates toy queues from production queues. Every on",
        "confidence": 1.0,
        "rationale": "Primary feature specification"
      }
    ],
    "implementation_spec": {
      "implementation_checklist": [
        "API: list + count with filters",
        "API: peek item by ID/index",
        "API: requeue selected",
        "API: purge selected/all",
        "TUI: DLQ tab UI + pager + actions",
        "Docs + screenshots"
      ],
      "technical_approach": [
        "API: add DLQ list with pagination, peek by index/ID, requeue selected, purge endpoints.",
        "TUI: DLQ tab with pager, filter, selection; action bar; confirmations.",
        "Performance: server-side pagination; cap payload sizes; streaming where feasible."
      ],
      "code_structure": {
        "main_package": "internal/dlq-remediation-ui",
        "files": [
          "dlq-remediation-ui.go - Main implementation",
          "types.go - Data structures",
          "handlers.go - Request handlers",
          "errors.go - Custom errors",
          "config.go - Configuration"
        ]
      }
    }
  },
  "dependencies": [],
  "instructions": {
    "on_complete": "Move this file to finished-tasks/P3.T070.json",
    "on_failure": "Move this file to failed-tasks/P3.T070.json",
    "on_help_needed": "Move to help-me/P3.T070.json",
    "note": "READ THE FULL TASK SPECIFICATION! All details are in the task field.",
    "resource_locks": {
      "exclusive_locks": [],
      "shared_limited": [
        {
          "resource": "test_redis",
          "quantity": 1
        }
      ],
      "creates": [],
      "modifies": []
    }
  }
}
{
  "task_id": "P2.T006",
  "created_at": "2025-09-14T19:41:47.125025Z",
  "task": {
    "id": "P2.T006",
    "feature_id": "F002",
    "title": "Implement Multi Cluster Control",
    "description": "Implement task for Multi Cluster Control",
    "boundaries": {
      "expected_complexity": {
        "value": "~ LoC",
        "breakdown": "Core logic (60%), Tests (25%), Integration (15%)"
      },
      "definition_of_done": {
        "criteria": [
          "All functions implemented per specification",
          "Unit tests passing with 80% coverage",
          "Integration tests passing",
          "Code reviewed and approved",
          "Documentation updated",
          "No linting errors",
          "Performance benchmarks met",
          "Multiple clusters configured with labels and colors.",
          "Side\u2011by\u2011side compare mode exists for Jobs and Workers.",
          "Multi\u2011apply actions require explicit selection and confirmation listing targets."
        ],
        "stop_when": "Core functionality complete; do NOT add extra features"
      },
      "scope": {
        "includes": [
          "internal/multi-cluster-control/",
          "internal/multi-cluster-control/*_test.go",
          "docs/api/multi-cluster-control.md"
        ],
        "excludes": [
          "UI unless specified",
          "deployment configs"
        ],
        "restrictions": "Follow existing code patterns and style guide"
      }
    },
    "execution_guidance": {
      "logging": {
        "format": "JSON Lines (JSONL)",
        "required_fields": [
          "timestamp",
          "task_id",
          "step",
          "status",
          "message"
        ],
        "optional_fields": [
          "percent",
          "data",
          "checkpoint"
        ],
        "status_values": [
          "start",
          "progress",
          "done",
          "error",
          "checkpoint"
        ]
      },
      "checkpoints": [
        {
          "id": "setup",
          "at_percent": 10,
          "description": "Module structure created"
        },
        {
          "id": "core",
          "at_percent": 40,
          "description": "Core logic implemented"
        },
        {
          "id": "integration",
          "at_percent": 60,
          "description": "Integration complete"
        },
        {
          "id": "tests",
          "at_percent": 80,
          "description": "Tests passing"
        },
        {
          "id": "docs",
          "at_percent": 100,
          "description": "Documentation complete"
        }
      ],
      "monitoring": {
        "metrics_to_track": [],
        "alerts": []
      }
    },
    "resource_requirements": {
      "estimated": {
        "cpu_cores": 1,
        "memory_mb": 1024,
        "disk_io_mbps": 10
      },
      "peak": {
        "cpu_cores": 2,
        "memory_mb": 2048,
        "disk_io_mbps": 50,
        "during": "compilation or testing"
      },
      "worker_capabilities_required": [
        "golang",
        "backend",
        "redis"
      ]
    },
    "scheduling_hints": {
      "priority": "medium",
      "preemptible": true,
      "retry_on_failure": true,
      "max_retries": 3,
      "checkpoint_capable": true
    },
    "duration": {
      "optimistic": 8,
      "mostLikely": 16,
      "pessimistic": 24
    },
    "shared_resources": {
      "exclusive_locks": [],
      "shared_limited": [
        {
          "resource": "test_redis",
          "quantity": 1
        }
      ],
      "creates": [],
      "modifies": []
    },
    "acceptance_checks": [
      {
        "type": "automated",
        "description": "Multiple clusters configured with labels and colors.",
        "script": "test_p2.t006.sh"
      },
      {
        "type": "automated",
        "description": "Side\u2011by\u2011side compare mode exists for Jobs and Workers.",
        "script": "test_p2.t006.sh"
      },
      {
        "type": "automated",
        "description": "Multi\u2011apply actions require explicit selection and confirmation listing targets.",
        "script": "test_p2.t006.sh"
      },
      {
        "type": "manual",
        "description": "Multi\u2011endpoint config + tabs",
        "script": null
      },
      {
        "type": "manual",
        "description": "Side\u2011by\u2011side compare views",
        "script": null
      }
    ],
    "evidence": [
      {
        "type": "plan",
        "source": "docs/ideas/multi-cluster-control.md",
        "excerpt": "Manage multiple Redis clusters from a single TUI: quick switch tabs, side\u2011by\u2011side compare, and optionally propagate admin actions across clusters with confirmations.\n\n> [!note]- **\ud83d\udde3\ufe0f CLAUDE'S THOUGHTS",
        "confidence": 1.0,
        "rationale": "Primary feature specification"
      }
    ],
    "implementation_spec": {
      "implementation_checklist": [
        "Multi\u2011endpoint config + tabs",
        "Side\u2011by\u2011side compare views",
        "Multi\u2011apply action flow + confirmations",
        "Docs"
      ],
      "technical_approach": [
        "Config: accept multiple Redis endpoints with labels; hot\u2011switch via `1..9` or mouse tabs.",
        "Compare view: render side\u2011by\u2011side key stats; highlight deltas and anomalies.",
        "Propagate actions: opt\u2011in multi\u2011select clusters for actions (PurgeDLQ, Bench) with explicit confirm.",
        "Caching: per\u2011cluster polling with jitter; summarized health in tab bar.",
        "Observability: cluster\u2011qualified metrics and logs."
      ],
      "code_structure": {
        "main_package": "internal/multi-cluster-control",
        "files": [
          "multi-cluster-control.go - Main implementation",
          "types.go - Data structures",
          "handlers.go - Request handlers",
          "errors.go - Custom errors",
          "config.go - Configuration"
        ]
      }
    }
  },
  "dependencies": [
    "P2.T005"
  ],
  "instructions": {
    "on_complete": "Move this file to finished-tasks/P2.T006.json",
    "on_failure": "Move this file to failed-tasks/P2.T006.json",
    "on_help_needed": "Move to help-me/P2.T006.json",
    "note": "READ THE FULL TASK SPECIFICATION! All details are in the task field.",
    "resource_locks": {
      "exclusive_locks": [],
      "shared_limited": [
        {
          "resource": "test_redis",
          "quantity": 1
        }
      ],
      "creates": [],
      "modifies": []
    }
  }
}
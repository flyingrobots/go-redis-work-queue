{
  "task_id": "P3.T054",
  "created_at": "2025-09-14T19:41:47.141036Z",
  "task": {
    "id": "P3.T054",
    "feature_id": "F021",
    "title": "Implement Producer Backpressure",
    "description": "Implement task for Producer Backpressure",
    "boundaries": {
      "expected_complexity": {
        "value": "~ LoC",
        "breakdown": "Core logic (60%), Tests (25%), Integration (15%)"
      },
      "definition_of_done": {
        "criteria": [
          "All functions implemented per specification",
          "Unit tests passing with 80% coverage",
          "Integration tests passing",
          "Code reviewed and approved",
          "Documentation updated",
          "No linting errors",
          "Performance benchmarks met",
          "Backpressure controller with thresholds and jittered polling.",
          "Circuit breaker with configurable trip criteria and recovery.",
          "Metrics exported for throttle and shed decisions."
        ],
        "stop_when": "Core functionality complete; do NOT add extra features"
      },
      "scope": {
        "includes": [
          "internal/producer-backpressure/",
          "internal/producer-backpressure/*_test.go",
          "docs/api/producer-backpressure.md"
        ],
        "excludes": [
          "UI unless specified",
          "deployment configs"
        ],
        "restrictions": "Follow existing code patterns and style guide"
      }
    },
    "execution_guidance": {
      "logging": {
        "format": "JSON Lines (JSONL)",
        "required_fields": [
          "timestamp",
          "task_id",
          "step",
          "status",
          "message"
        ],
        "optional_fields": [
          "percent",
          "data",
          "checkpoint"
        ],
        "status_values": [
          "start",
          "progress",
          "done",
          "error",
          "checkpoint"
        ]
      },
      "checkpoints": [
        {
          "id": "setup",
          "at_percent": 10,
          "description": "Module structure created"
        },
        {
          "id": "core",
          "at_percent": 40,
          "description": "Core logic implemented"
        },
        {
          "id": "integration",
          "at_percent": 60,
          "description": "Integration complete"
        },
        {
          "id": "tests",
          "at_percent": 80,
          "description": "Tests passing"
        },
        {
          "id": "docs",
          "at_percent": 100,
          "description": "Documentation complete"
        }
      ],
      "monitoring": {
        "metrics_to_track": [],
        "alerts": []
      }
    },
    "resource_requirements": {
      "estimated": {
        "cpu_cores": 1,
        "memory_mb": 1024,
        "disk_io_mbps": 10
      },
      "peak": {
        "cpu_cores": 2,
        "memory_mb": 2048,
        "disk_io_mbps": 50,
        "during": "compilation or testing"
      },
      "worker_capabilities_required": [
        "golang",
        "backend",
        "redis"
      ]
    },
    "scheduling_hints": {
      "priority": "medium",
      "preemptible": true,
      "retry_on_failure": true,
      "max_retries": 3,
      "checkpoint_capable": true
    },
    "duration": {
      "optimistic": 8,
      "mostLikely": 16,
      "pessimistic": 24
    },
    "shared_resources": {
      "exclusive_locks": [],
      "shared_limited": [
        {
          "resource": "test_redis",
          "quantity": 1
        }
      ],
      "creates": [],
      "modifies": []
    },
    "acceptance_checks": [
      {
        "type": "automated",
        "description": "Backpressure controller with thresholds and jittered polling.",
        "script": "test_p3.t054.sh"
      },
      {
        "type": "automated",
        "description": "Circuit breaker with configurable trip criteria and recovery.",
        "script": "test_p3.t054.sh"
      },
      {
        "type": "automated",
        "description": "Metrics exported for throttle and shed decisions.",
        "script": "test_p3.t054.sh"
      },
      {
        "type": "manual",
        "description": "Define thresholds and controller",
        "script": null
      },
      {
        "type": "manual",
        "description": "Implement Go SDK helper",
        "script": null
      }
    ],
    "evidence": [
      {
        "type": "plan",
        "source": "docs/ideas/producer-backpressure.md",
        "excerpt": "Provide producers with real\u2011time backpressure signals and helpers to adapt enqueue rate when queues are saturated. Offer SDK shims that expose `SuggestThrottle()` and circuit breaking by priority.\n\n> ",
        "confidence": 1.0,
        "rationale": "Primary feature specification"
      }
    ],
    "implementation_spec": {
      "implementation_checklist": [
        "Define thresholds and controller",
        "Implement Go SDK helper",
        "Integrate Admin API hints",
        "Add TUI indicator + metrics",
        "Docs + examples"
      ],
      "technical_approach": [
        "Signals:",
        "Poll Admin API stats (backlog length, age, rate limit budget) with jitter.",
        "Expose per\u2011queue thresholds and target backlog windows.",
        "Optional push channel via Event Hooks for threshold crossings.",
        "SDK helpers (Go first):",
        "`BackpressureController` with `SuggestThrottle()` returning sleep/delay hints.",
        "Circuit breaker for enqueue (open on sustained saturation; half\u2011open probes).",
        "Priority\u2011aware hints (high protected, low sheds first).",
        "Protocol hints:",
        "Include rate/budget headers in API responses when using HTTP Admin API.",
        "Producer integration:",
        "Simple wrapper: `bp.Run(ctx, func() { enqueue(...) })` schedules work to hints.",
        "Metrics: observed throttle, shed events, breaker state."
      ],
      "code_structure": {
        "main_package": "internal/producer-backpressure",
        "files": [
          "producer-backpressure.go - Main implementation",
          "types.go - Data structures",
          "handlers.go - Request handlers",
          "errors.go - Custom errors",
          "config.go - Configuration"
        ]
      }
    }
  },
  "dependencies": [],
  "instructions": {
    "on_complete": "Move this file to finished-tasks/P3.T054.json",
    "on_failure": "Move this file to failed-tasks/P3.T054.json",
    "on_help_needed": "Move to help-me/P3.T054.json",
    "note": "READ THE FULL TASK SPECIFICATION! All details are in the task field.",
    "resource_locks": {
      "exclusive_locks": [],
      "shared_limited": [
        {
          "resource": "test_redis",
          "quantity": 1
        }
      ],
      "creates": [],
      "modifies": []
    }
  }
}
{
  "task_id": "P4.T044",
  "created_at": "2025-09-14T19:41:47.137551Z",
  "task": {
    "id": "P4.T044",
    "feature_id": "F017",
    "title": "Design Job Genealogy Navigator",
    "description": "Design task for Job Genealogy Navigator",
    "boundaries": {
      "expected_complexity": {
        "value": "1 design doc, ~800-1200 lines",
        "breakdown": "Architecture (400), API spec (300), Data model (200), Diagrams (300)"
      },
      "definition_of_done": {
        "criteria": [
          "Architecture documented with Mermaid diagrams",
          "API endpoints specified in OpenAPI 3.0 format",
          "Data models defined with JSON Schema",
          "Integration points identified and documented",
          "Security threat model completed",
          "Performance requirements specified",
          "Testing strategy defined"
        ],
        "stop_when": "Design approved by architect; do NOT start implementation"
      },
      "scope": {
        "includes": [
          "docs/design/f017-design.md",
          "docs/api/f017-openapi.yaml",
          "docs/schemas/f017-schema.json"
        ],
        "excludes": [
          "implementation code",
          "tests",
          "deployment configs"
        ],
        "restrictions": "Must follow company design template"
      }
    },
    "execution_guidance": {
      "logging": {
        "format": "JSON Lines (JSONL)",
        "required_fields": [
          "timestamp",
          "task_id",
          "step",
          "status",
          "message"
        ],
        "optional_fields": [
          "percent",
          "data",
          "checkpoint"
        ],
        "status_values": [
          "start",
          "progress",
          "done",
          "error",
          "checkpoint"
        ]
      },
      "checkpoints": [
        {
          "id": "cp1",
          "at_percent": 25,
          "description": "Architecture draft complete"
        },
        {
          "id": "cp2",
          "at_percent": 50,
          "description": "API specification complete"
        },
        {
          "id": "cp3",
          "at_percent": 75,
          "description": "Data models and diagrams complete"
        },
        {
          "id": "cp4",
          "at_percent": 100,
          "description": "Review and approval"
        }
      ],
      "monitoring": {
        "metrics_to_track": [],
        "alerts": []
      }
    },
    "resource_requirements": {
      "estimated": {
        "cpu_cores": 1,
        "memory_mb": 512,
        "disk_io_mbps": 10
      },
      "peak": {
        "cpu_cores": 2,
        "memory_mb": 1024,
        "disk_io_mbps": 50,
        "during": "compilation or testing"
      },
      "worker_capabilities_required": [
        "documentation",
        "architecture",
        "api_design"
      ]
    },
    "scheduling_hints": {
      "priority": "medium",
      "preemptible": true,
      "retry_on_failure": true,
      "max_retries": 3,
      "checkpoint_capable": true
    },
    "duration": {
      "optimistic": 4,
      "mostLikely": 8,
      "pessimistic": 16
    },
    "shared_resources": {
      "exclusive_locks": [],
      "shared_limited": [],
      "creates": [],
      "modifies": []
    },
    "acceptance_checks": [
      {
        "type": "automated",
        "description": "Complete genealogy captured automatically",
        "script": "test_p4.t044.sh"
      },
      {
        "type": "automated",
        "description": "Tree renders smoothly for 100+ node families",
        "script": "test_p4.t044.sh"
      },
      {
        "type": "automated",
        "description": "Navigation responsive with <50ms updates",
        "script": "test_p4.t044.sh"
      },
      {
        "type": "manual",
        "description": "Relationship data automatically pruned after TTL",
        "script": null
      },
      {
        "type": "manual",
        "description": "Design relationship schema",
        "script": null
      }
    ],
    "evidence": [
      {
        "type": "plan",
        "source": "docs/ideas/job-genealogy-navigator.md",
        "excerpt": "Interactive visualization of job family trees showing parent-child relationships, retry chains, spawned subjobs, and failure cascades. Navigate complex job genealogies in the TUI to understand causali",
        "confidence": 1.0,
        "rationale": "Primary feature specification"
      }
    ],
    "implementation_spec": {
      "design_sections": [
        "Executive Summary",
        "System Architecture",
        "API Specification",
        "Data Models",
        "Security Model",
        "Performance Requirements",
        "Testing Strategy",
        "Deployment Plan"
      ],
      "deliverables": [
        "Architecture document (Markdown + Mermaid)",
        "OpenAPI 3.0 specification",
        "JSON Schema definitions",
        "Security threat model",
        "Performance benchmarks"
      ],
      "technical_approach": [
        "Relationship Tracking:",
        "Capture parent_id, spawn_reason, relationship_type in job metadata",
        "Relationship types: retry, spawn, fork, callback, compensation",
        "Bidirectional indexes: parent\u2192children, child\u2192ancestors",
        "Store in Redis sorted sets for efficient traversal",
        "Graph Operations:",
        "Build family tree from any job (ancestors + descendants)",
        "Find common ancestors between failed jobs",
        "Calculate impact radius (all affected descendants)",
        "Detect cycles and anomalies",
        "TUI Visualization:",
        "ASCII art tree with box-drawing characters",
        "Collapsible/expandable nodes",
        "Color coding: green (success), red (failed), yellow (processing), gray (pending)",
        "Navigation: arrow keys to traverse, enter to inspect, 'f' to focus subtree",
        "Multiple layout algorithms: top-down tree, left-right timeline, radial",
        "Analysis Features:",
        "\"Blame\" mode: trace failure to root cause",
        "\"Impact\" mode: show all affected descendants",
        "Pattern detection: identify recurring failure genealogies",
        "Time-lapse: animate tree growth over time",
        "Integration:",
        "Auto-capture relationships during enqueue/retry/spawn",
        "Link with Time Travel Debugger for replay",
        "Export as DOT/Mermaid for external visualization"
      ],
      "user_stories": [
        "I can see the complete family tree of any job",
        "I can trace cascading failures to their root cause",
        "I can identify patterns in job relationships over time"
      ]
    }
  },
  "dependencies": [],
  "instructions": {
    "on_complete": "Move this file to finished-tasks/P4.T044.json",
    "on_failure": "Move this file to failed-tasks/P4.T044.json",
    "on_help_needed": "Move to help-me/P4.T044.json",
    "note": "READ THE FULL TASK SPECIFICATION! All details are in the task field.",
    "resource_locks": {
      "exclusive_locks": [],
      "shared_limited": [],
      "creates": [],
      "modifies": []
    }
  }
}
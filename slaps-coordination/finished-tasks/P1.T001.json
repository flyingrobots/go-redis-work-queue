{
  "task_id": "P1.T001",
  "created_at": "2025-09-14T19:41:47.122819Z",
  "task": {
    "id": "P1.T001",
    "feature_id": "F001",
    "title": "Design Admin Api",
    "description": "Design task for Admin Api",
    "boundaries": {
      "expected_complexity": {
        "value": "1 design doc, ~800-1200 lines",
        "breakdown": "Architecture (400), API spec (300), Data model (200), Diagrams (300)"
      },
      "definition_of_done": {
        "criteria": [
          "Architecture documented with Mermaid diagrams",
          "API endpoints specified in OpenAPI 3.0 format",
          "Data models defined with JSON Schema",
          "Integration points identified and documented",
          "Security threat model completed",
          "Performance requirements specified",
          "Testing strategy defined"
        ],
        "stop_when": "Design approved by architect; do NOT start implementation"
      },
      "scope": {
        "includes": [
          "docs/design/f001-design.md",
          "docs/api/f001-openapi.yaml",
          "docs/schemas/f001-schema.json"
        ],
        "excludes": [
          "implementation code",
          "tests",
          "deployment configs"
        ],
        "restrictions": "Must follow company design template"
      }
    },
    "execution_guidance": {
      "logging": {
        "format": "JSON Lines (JSONL)",
        "required_fields": [
          "timestamp",
          "task_id",
          "step",
          "status",
          "message"
        ],
        "optional_fields": [
          "percent",
          "data",
          "checkpoint"
        ],
        "status_values": [
          "start",
          "progress",
          "done",
          "error",
          "checkpoint"
        ]
      },
      "checkpoints": [
        {
          "id": "cp1",
          "at_percent": 25,
          "description": "Architecture draft complete"
        },
        {
          "id": "cp2",
          "at_percent": 50,
          "description": "API specification complete"
        },
        {
          "id": "cp3",
          "at_percent": 75,
          "description": "Data models and diagrams complete"
        },
        {
          "id": "cp4",
          "at_percent": 100,
          "description": "Review and approval"
        }
      ],
      "monitoring": {
        "metrics_to_track": [],
        "alerts": []
      }
    },
    "resource_requirements": {
      "estimated": {
        "cpu_cores": 1,
        "memory_mb": 512,
        "disk_io_mbps": 10
      },
      "peak": {
        "cpu_cores": 2,
        "memory_mb": 1024,
        "disk_io_mbps": 50,
        "during": "compilation or testing"
      },
      "worker_capabilities_required": [
        "documentation",
        "architecture",
        "api_design"
      ]
    },
    "scheduling_hints": {
      "priority": "high",
      "preemptible": false,
      "retry_on_failure": true,
      "max_retries": 3,
      "checkpoint_capable": true
    },
    "duration": {
      "optimistic": 4,
      "mostLikely": 8,
      "pessimistic": 16
    },
    "shared_resources": {
      "exclusive_locks": [],
      "shared_limited": [],
      "creates": [],
      "modifies": []
    },
    "acceptance_checks": [
      {
        "type": "automated",
        "description": "Spec published (OpenAPI and/or proto) for Stats, StatsKeys, Peek, PurgeDLQ, PurgeAll, Bench.",
        "script": "test_p1.t001.sh"
      },
      {
        "type": "automated",
        "description": "Auth with deny\u2011by\u2011default; tokens verified; audit log persisted for destructive calls.",
        "script": "test_p1.t001.sh"
      },
      {
        "type": "automated",
        "description": "Rate limits and explicit confirmation flags for destructive actions.",
        "script": "test_p1.t001.sh"
      },
      {
        "type": "manual",
        "description": "Versioned paths; compat notes; structured error schema.",
        "script": null
      },
      {
        "type": "manual",
        "description": "Handler unit tests and integration tests pass in CI.",
        "script": null
      }
    ],
    "evidence": [
      {
        "type": "plan",
        "source": "docs/ideas/admin-api.md",
        "excerpt": "Define a versioned, secure Admin API (HTTP/gRPC) that fronts existing admin functions, enabling TUI/web/automation with RBAC and observability.\n\n> [!note]- **\ud83d\udde3\ufe0f CLAUDE'S THOUGHTS \ud83d\udcad**\n> Smart foundatio",
        "confidence": 1.0,
        "rationale": "Primary feature specification"
      }
    ],
    "implementation_spec": {
      "design_sections": [
        "Executive Summary",
        "System Architecture",
        "API Specification",
        "Data Models",
        "Security Model",
        "Performance Requirements",
        "Testing Strategy",
        "Deployment Plan"
      ],
      "deliverables": [
        "Architecture document (Markdown + Mermaid)",
        "OpenAPI 3.0 specification",
        "JSON Schema definitions",
        "Security threat model",
        "Performance benchmarks"
      ],
      "technical_approach": [
        "Choose transport: HTTP+JSON (OpenAPI) with optional gRPC; generate clients where useful.",
        "Implement middleware: auth (bearer), rate limiting, request logging, correlation IDs.",
        "Map handlers to `internal/admin` functions; add pagination/validation.",
        "Versioning: `/api/v1`; document compat policy; structured errors.",
        "Observability: metrics (per-endpoint latency/error), audit logs for destructive ops.",
        "Ship minimal clients for TUI/CLI; integration tests with ephemeral Redis."
      ],
      "user_stories": [
        "I can call Stats/Peek/Purge endpoints with auth tokens.",
        "I consume a stable v1 API regardless of internal changes.",
        "I can scope tokens/roles to admin actions."
      ]
    }
  },
  "dependencies": [],
  "instructions": {
    "on_complete": "Move this file to finished-tasks/P1.T001.json",
    "on_failure": "Move this file to failed-tasks/P1.T001.json",
    "on_help_needed": "Move to help-me/P1.T001.json",
    "note": "READ THE FULL TASK SPECIFICATION! All details are in the task field.",
    "resource_locks": {
      "exclusive_locks": [],
      "shared_limited": [],
      "creates": [],
      "modifies": []
    }
  }
}
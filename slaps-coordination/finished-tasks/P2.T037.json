{
  "task_id": "P2.T037",
  "created_at": "2025-09-14T19:41:47.133727Z",
  "task": {
    "id": "P2.T037",
    "feature_id": "F014",
    "title": "Design Event Hooks",
    "description": "Design task for Event Hooks",
    "boundaries": {
      "expected_complexity": {
        "value": "1 design doc, ~800-1200 lines",
        "breakdown": "Architecture (400), API spec (300), Data model (200), Diagrams (300)"
      },
      "definition_of_done": {
        "criteria": [
          "Architecture documented with Mermaid diagrams",
          "API endpoints specified in OpenAPI 3.0 format",
          "Data models defined with JSON Schema",
          "Integration points identified and documented",
          "Security threat model completed",
          "Performance requirements specified",
          "Testing strategy defined"
        ],
        "stop_when": "Design approved by architect; do NOT start implementation"
      },
      "scope": {
        "includes": [
          "docs/design/f014-design.md",
          "docs/api/f014-openapi.yaml",
          "docs/schemas/f014-schema.json"
        ],
        "excludes": [
          "implementation code",
          "tests",
          "deployment configs"
        ],
        "restrictions": "Must follow company design template"
      }
    },
    "execution_guidance": {
      "logging": {
        "format": "JSON Lines (JSONL)",
        "required_fields": [
          "timestamp",
          "task_id",
          "step",
          "status",
          "message"
        ],
        "optional_fields": [
          "percent",
          "data",
          "checkpoint"
        ],
        "status_values": [
          "start",
          "progress",
          "done",
          "error",
          "checkpoint"
        ]
      },
      "checkpoints": [
        {
          "id": "cp1",
          "at_percent": 25,
          "description": "Architecture draft complete"
        },
        {
          "id": "cp2",
          "at_percent": 50,
          "description": "API specification complete"
        },
        {
          "id": "cp3",
          "at_percent": 75,
          "description": "Data models and diagrams complete"
        },
        {
          "id": "cp4",
          "at_percent": 100,
          "description": "Review and approval"
        }
      ],
      "monitoring": {
        "metrics_to_track": [],
        "alerts": []
      }
    },
    "resource_requirements": {
      "estimated": {
        "cpu_cores": 1,
        "memory_mb": 512,
        "disk_io_mbps": 10
      },
      "peak": {
        "cpu_cores": 2,
        "memory_mb": 1024,
        "disk_io_mbps": 50,
        "during": "compilation or testing"
      },
      "worker_capabilities_required": [
        "documentation",
        "architecture",
        "api_design"
      ]
    },
    "scheduling_hints": {
      "priority": "medium",
      "preemptible": true,
      "retry_on_failure": true,
      "max_retries": 3,
      "checkpoint_capable": true
    },
    "duration": {
      "optimistic": 4,
      "mostLikely": 8,
      "pessimistic": 16
    },
    "shared_resources": {
      "exclusive_locks": [],
      "shared_limited": [],
      "creates": [],
      "modifies": []
    },
    "acceptance_checks": [
      {
        "type": "automated",
        "description": "Subscriptions with filters and secrets.",
        "script": "test_p2.t037.sh"
      },
      {
        "type": "automated",
        "description": "Delivery with retries, backoff, and DLH.",
        "script": "test_p2.t037.sh"
      },
      {
        "type": "automated",
        "description": "Test and replay supported via Admin API and TUI.",
        "script": "test_p2.t037.sh"
      },
      {
        "type": "manual",
        "description": "Define event schema + bus",
        "script": null
      },
      {
        "type": "manual",
        "description": "Implement webhook + NATS transports",
        "script": null
      }
    ],
    "evidence": [
      {
        "type": "plan",
        "source": "docs/ideas/event-hooks.md",
        "excerpt": "Emit events for job lifecycle changes (enqueued, started, succeeded, failed, DLQ) to external systems via webhooks or NATS. Signed payloads, backoff retries, and per\u2011queue filters provide safe, flexib",
        "confidence": 1.0,
        "rationale": "Primary feature specification"
      }
    ],
    "implementation_spec": {
      "design_sections": [
        "Executive Summary",
        "System Architecture",
        "API Specification",
        "Data Models",
        "Security Model",
        "Performance Requirements",
        "Testing Strategy",
        "Deployment Plan"
      ],
      "deliverables": [
        "Architecture document (Markdown + Mermaid)",
        "OpenAPI 3.0 specification",
        "JSON Schema definitions",
        "Security threat model",
        "Performance benchmarks"
      ],
      "technical_approach": [
        "Event bus:",
        "Internal dispatcher with typed events and subscriber backends.",
        "Events: job_enqueued, job_started, job_succeeded, job_failed, job_dlq, job_retried.",
        "Transports:",
        "Webhooks: POST JSON with HMAC signature, per\u2011subscription secret.",
        "NATS (optional): publish to subjects by event type and queue.",
        "Delivery semantics:",
        "At\u2011least\u2011once with exponential backoff; max attempts; dead\u2011letter for hooks.",
        "Idempotency key in headers; timestamp; correlation/trace IDs when available.",
        "Config:",
        "Subscriptions: matchers (queue, priority, result), endpoint/subject, headers, secret, rate cap.",
        "Health: last delivery status, retry counts, moving window success rate.",
        "Admin API:",
        "CRUD subscriptions, test delivery, list DLH (dead\u2011letter hooks) with replay.",
        "TUI:",
        "Minimal management panel: list subscriptions and status; trigger test; replay failed.",
        "Security: HMAC signing; optional mTLS; redact sensitive payload fields by pattern."
      ],
      "user_stories": [
        "I can subscribe a webhook to `job_failed` for queue `payments` with a secret and receive signed payloads.",
        "I can see delivery success rate and replay failures."
      ]
    }
  },
  "dependencies": [],
  "instructions": {
    "on_complete": "Move this file to finished-tasks/P2.T037.json",
    "on_failure": "Move this file to failed-tasks/P2.T037.json",
    "on_help_needed": "Move to help-me/P2.T037.json",
    "note": "READ THE FULL TASK SPECIFICATION! All details are in the task field.",
    "resource_locks": {
      "exclusive_locks": [],
      "shared_limited": [],
      "creates": [],
      "modifies": []
    }
  }
}
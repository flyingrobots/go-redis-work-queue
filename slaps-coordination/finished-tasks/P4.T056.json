{
  "task_id": "P4.T056",
  "created_at": "2025-09-14T19:41:47.141921Z",
  "task": {
    "id": "P4.T056",
    "feature_id": "F022",
    "title": "Implement Queue Snapshot Testing",
    "description": "Implement task for Queue Snapshot Testing",
    "boundaries": {
      "expected_complexity": {
        "value": "~ LoC",
        "breakdown": "Core logic (60%), Tests (25%), Integration (15%)"
      },
      "definition_of_done": {
        "criteria": [
          "All functions implemented per specification",
          "Unit tests passing with 80% coverage",
          "Integration tests passing",
          "Code reviewed and approved",
          "Documentation updated",
          "No linting errors",
          "Performance benchmarks met",
          "Snapshots capture complete queue state",
          "Smart diff ignores non-semantic changes",
          "Git integration with reasonable file sizes"
        ],
        "stop_when": "Core functionality complete; do NOT add extra features"
      },
      "scope": {
        "includes": [
          "internal/queue-snapshot-testing/",
          "internal/queue-snapshot-testing/*_test.go",
          "docs/api/queue-snapshot-testing.md"
        ],
        "excludes": [
          "UI unless specified",
          "deployment configs"
        ],
        "restrictions": "Follow existing code patterns and style guide"
      }
    },
    "execution_guidance": {
      "logging": {
        "format": "JSON Lines (JSONL)",
        "required_fields": [
          "timestamp",
          "task_id",
          "step",
          "status",
          "message"
        ],
        "optional_fields": [
          "percent",
          "data",
          "checkpoint"
        ],
        "status_values": [
          "start",
          "progress",
          "done",
          "error",
          "checkpoint"
        ]
      },
      "checkpoints": [
        {
          "id": "setup",
          "at_percent": 10,
          "description": "Module structure created"
        },
        {
          "id": "core",
          "at_percent": 40,
          "description": "Core logic implemented"
        },
        {
          "id": "integration",
          "at_percent": 60,
          "description": "Integration complete"
        },
        {
          "id": "tests",
          "at_percent": 80,
          "description": "Tests passing"
        },
        {
          "id": "docs",
          "at_percent": 100,
          "description": "Documentation complete"
        }
      ],
      "monitoring": {
        "metrics_to_track": [],
        "alerts": []
      }
    },
    "resource_requirements": {
      "estimated": {
        "cpu_cores": 1,
        "memory_mb": 1024,
        "disk_io_mbps": 10
      },
      "peak": {
        "cpu_cores": 2,
        "memory_mb": 2048,
        "disk_io_mbps": 50,
        "during": "compilation or testing"
      },
      "worker_capabilities_required": [
        "golang",
        "backend",
        "redis"
      ]
    },
    "scheduling_hints": {
      "priority": "medium",
      "preemptible": true,
      "retry_on_failure": true,
      "max_retries": 3,
      "checkpoint_capable": true
    },
    "duration": {
      "optimistic": 8,
      "mostLikely": 16,
      "pessimistic": 24
    },
    "shared_resources": {
      "exclusive_locks": [],
      "shared_limited": [
        {
          "resource": "test_redis",
          "quantity": 1
        }
      ],
      "creates": [],
      "modifies": []
    },
    "acceptance_checks": [
      {
        "type": "automated",
        "description": "Snapshots capture complete queue state",
        "script": "test_p4.t056.sh"
      },
      {
        "type": "automated",
        "description": "Smart diff ignores non-semantic changes",
        "script": "test_p4.t056.sh"
      },
      {
        "type": "automated",
        "description": "Git integration with reasonable file sizes",
        "script": "test_p4.t056.sh"
      },
      {
        "type": "manual",
        "description": "<1s to save/load typical snapshots",
        "script": null
      },
      {
        "type": "manual",
        "description": "Design snapshot schema",
        "script": null
      }
    ],
    "evidence": [
      {
        "type": "plan",
        "source": "docs/ideas/queue-snapshot-testing.md",
        "excerpt": "Capture complete queue states as snapshots for regression testing, allowing teams to save, version, and replay complex queue scenarios. Compare actual vs. expected states with smart diffing that ignor",
        "confidence": 1.0,
        "rationale": "Primary feature specification"
      }
    ],
    "implementation_spec": {
      "implementation_checklist": [
        "Design snapshot schema",
        "Implement state serialization",
        "Build smart diff engine",
        "Create test framework integration",
        "Add TUI snapshot browser",
        "Git workflow tooling",
        "Example snapshot library"
      ],
      "technical_approach": [
        "Snapshot Capture:",
        "Complete state: all queues, jobs, workers, configs",
        "Deterministic serialization (sorted keys, normalized timestamps)",
        "Compression with zstd for storage efficiency",
        "Metadata: description, tags, creation context",
        "Snapshot Operations:",
        "Save: capture current state with name/description",
        "Load: restore queue to saved state",
        "Compare: diff two snapshots with smart filtering",
        "Assert: verify current state matches snapshot",
        "Smart Diffing:",
        "Ignore: timestamps (unless relative), job IDs, worker IDs",
        "Focus on: queue lengths, job payloads, failure patterns",
        "Configurable ignore patterns",
        "Semantic diff: understand moved vs. changed jobs",
        "Test Integration:",
        "Jest-style snapshot testing for Go",
        "CI/CD integration with snapshot repositories",
        "Automatic snapshot updates with approval flow",
        "Snapshot fixtures for different test scenarios",
        "Version Control:",
        "Store snapshots in git with large file support",
        "Track snapshot changes over time",
        "Branch-specific snapshot sets",
        "Merge conflict resolution tools",
        "TUI Features:",
        "Snapshot browser with search/filter",
        "Visual diff viewer with side-by-side comparison",
        "One-click save/load current state",
        "Snapshot \"albums\" for related scenarios"
      ],
      "code_structure": {
        "main_package": "internal/queue-snapshot-testing",
        "files": [
          "queue-snapshot-testing.go - Main implementation",
          "types.go - Data structures",
          "handlers.go - Request handlers",
          "errors.go - Custom errors",
          "config.go - Configuration"
        ]
      }
    }
  },
  "dependencies": [],
  "instructions": {
    "on_complete": "Move this file to finished-tasks/P4.T056.json",
    "on_failure": "Move this file to failed-tasks/P4.T056.json",
    "on_help_needed": "Move to help-me/P4.T056.json",
    "note": "READ THE FULL TASK SPECIFICATION! All details are in the task field.",
    "resource_locks": {
      "exclusive_locks": [],
      "shared_limited": [
        {
          "resource": "test_redis",
          "quantity": 1
        }
      ],
      "creates": [],
      "modifies": []
    }
  }
}
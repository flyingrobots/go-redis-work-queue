{
  "task_id": "P4.T032",
  "created_at": "2025-09-14T19:41:47.131346Z",
  "task": {
    "id": "P4.T032",
    "feature_id": "F011",
    "title": "Implement Automatic Capacity Planning",
    "description": "Implement task for Automatic Capacity Planning",
    "boundaries": {
      "expected_complexity": {
        "value": "~ LoC",
        "breakdown": "Core logic (60%), Tests (25%), Integration (15%)"
      },
      "definition_of_done": {
        "criteria": [
          "All functions implemented per specification",
          "Unit tests passing with 80% coverage",
          "Integration tests passing",
          "Code reviewed and approved",
          "Documentation updated",
          "No linting errors",
          "Performance benchmarks met",
          "Planner computes recommended replicas from \u03bb and service times under a chosen SLO.",
          "Cool\u2011down and cap logic avoids oscillation.",
          "TUI previews impact and supports manual apply."
        ],
        "stop_when": "Core functionality complete; do NOT add extra features"
      },
      "scope": {
        "includes": [
          "internal/automatic-capacity-planning/",
          "internal/automatic-capacity-planning/*_test.go",
          "docs/api/automatic-capacity-planning.md"
        ],
        "excludes": [
          "UI unless specified",
          "deployment configs"
        ],
        "restrictions": "Follow existing code patterns and style guide"
      }
    },
    "execution_guidance": {
      "logging": {
        "format": "JSON Lines (JSONL)",
        "required_fields": [
          "timestamp",
          "task_id",
          "step",
          "status",
          "message"
        ],
        "optional_fields": [
          "percent",
          "data",
          "checkpoint"
        ],
        "status_values": [
          "start",
          "progress",
          "done",
          "error",
          "checkpoint"
        ]
      },
      "checkpoints": [
        {
          "id": "setup",
          "at_percent": 10,
          "description": "Module structure created"
        },
        {
          "id": "core",
          "at_percent": 40,
          "description": "Core logic implemented"
        },
        {
          "id": "integration",
          "at_percent": 60,
          "description": "Integration complete"
        },
        {
          "id": "tests",
          "at_percent": 80,
          "description": "Tests passing"
        },
        {
          "id": "docs",
          "at_percent": 100,
          "description": "Documentation complete"
        }
      ],
      "monitoring": {
        "metrics_to_track": [],
        "alerts": []
      }
    },
    "resource_requirements": {
      "estimated": {
        "cpu_cores": 1,
        "memory_mb": 1024,
        "disk_io_mbps": 10
      },
      "peak": {
        "cpu_cores": 2,
        "memory_mb": 2048,
        "disk_io_mbps": 50,
        "during": "compilation or testing"
      },
      "worker_capabilities_required": [
        "golang",
        "backend",
        "redis"
      ]
    },
    "scheduling_hints": {
      "priority": "medium",
      "preemptible": true,
      "retry_on_failure": true,
      "max_retries": 3,
      "checkpoint_capable": true
    },
    "duration": {
      "optimistic": 8,
      "mostLikely": 16,
      "pessimistic": 24
    },
    "shared_resources": {
      "exclusive_locks": [],
      "shared_limited": [
        {
          "resource": "test_redis",
          "quantity": 1
        }
      ],
      "creates": [],
      "modifies": []
    },
    "acceptance_checks": [
      {
        "type": "automated",
        "description": "Planner computes recommended replicas from \u03bb and service times under a chosen SLO.",
        "script": "test_p4.t032.sh"
      },
      {
        "type": "automated",
        "description": "Cool\u2011down and cap logic avoids oscillation.",
        "script": "test_p4.t032.sh"
      },
      {
        "type": "automated",
        "description": "TUI previews impact and supports manual apply.",
        "script": "test_p4.t032.sh"
      },
      {
        "type": "manual",
        "description": "Compute \u03bb and service stats by queue",
        "script": null
      },
      {
        "type": "manual",
        "description": "Implement planner + safety logic",
        "script": null
      }
    ],
    "evidence": [
      {
        "type": "plan",
        "source": "docs/ideas/automatic-capacity-planning.md",
        "excerpt": "Predict and set recommended worker counts to meet SLOs based on historical arrival/service rates. Generate actionable plans (or auto\u2011apply via Operator) with safety bands, cool\u2011downs, and what\u2011if simu",
        "confidence": 1.0,
        "rationale": "Primary feature specification"
      }
    ],
    "implementation_spec": {
      "implementation_checklist": [
        "Compute \u03bb and service stats by queue",
        "Implement planner + safety logic",
        "TUI planner UI + overlays",
        "Operator integration for apply",
        "Docs + runbooks"
      ],
      "technical_approach": [
        "Inputs:",
        "Arrival rate \u03bb(t) from enqueue metrics; service time distribution for jobs (mean, p95); current concurrency and utilization.",
        "SLO targets (p95 latency, max backlog, drain time after burst).",
        "Model:",
        "Use queueing approximations (M/M/c or M/G/c) to estimate needed concurrency `c` for target SLO.",
        "Blend with recent forecasts (EWMA/Holt\u2011Winters) to project \u03bb over next 30\u2013120 minutes.",
        "Add safety margin (e.g., 10\u201320%) and apply min/max caps.",
        "Planner:",
        "Produce a time\u2011segmented plan: desired replicas per WorkerPool per window.",
        "Add cool\u2011downs and step size limits to prevent thrash; roll forward only when confidence > threshold.",
        "Application:",
        "Manual mode: show plan in TUI with \u201cApply\u201d button.",
        "Auto mode: write desired replicas via Kubernetes Operator or local scaler.",
        "TUI:",
        "Planner panel with \u201cwhat\u2011if\u201d sliders (SLO, margin) and preview overlays on charts.",
        "Show expected backlog/latency under the proposed plan."
      ],
      "code_structure": {
        "main_package": "internal/automatic-capacity-planning",
        "files": [
          "automatic-capacity-planning.go - Main implementation",
          "types.go - Data structures",
          "handlers.go - Request handlers",
          "errors.go - Custom errors",
          "config.go - Configuration"
        ]
      }
    }
  },
  "dependencies": [],
  "instructions": {
    "on_complete": "Move this file to finished-tasks/P4.T032.json",
    "on_failure": "Move this file to failed-tasks/P4.T032.json",
    "on_help_needed": "Move to help-me/P4.T032.json",
    "note": "READ THE FULL TASK SPECIFICATION! All details are in the task field.",
    "resource_locks": {
      "exclusive_locks": [],
      "shared_limited": [
        {
          "resource": "test_redis",
          "quantity": 1
        }
      ],
      "creates": [],
      "modifies": []
    }
  }
}
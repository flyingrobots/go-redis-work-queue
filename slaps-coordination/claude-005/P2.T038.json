{
  "task_id": "P2.T038",
  "created_at": "2025-09-14T19:41:47.134931Z",
  "task": {
    "id": "P2.T038",
    "feature_id": "F014",
    "title": "Implement Event Hooks",
    "description": "Implement task for Event Hooks",
    "boundaries": {
      "expected_complexity": {
        "value": "~ LoC",
        "breakdown": "Core logic (60%), Tests (25%), Integration (15%)"
      },
      "definition_of_done": {
        "criteria": [
          "All functions implemented per specification",
          "Unit tests passing with 80% coverage",
          "Integration tests passing",
          "Code reviewed and approved",
          "Documentation updated",
          "No linting errors",
          "Performance benchmarks met",
          "Subscriptions with filters and secrets.",
          "Delivery with retries, backoff, and DLH.",
          "Test and replay supported via Admin API and TUI."
        ],
        "stop_when": "Core functionality complete; do NOT add extra features"
      },
      "scope": {
        "includes": [
          "internal/event-hooks/",
          "internal/event-hooks/*_test.go",
          "docs/api/event-hooks.md"
        ],
        "excludes": [
          "UI unless specified",
          "deployment configs"
        ],
        "restrictions": "Follow existing code patterns and style guide"
      }
    },
    "execution_guidance": {
      "logging": {
        "format": "JSON Lines (JSONL)",
        "required_fields": [
          "timestamp",
          "task_id",
          "step",
          "status",
          "message"
        ],
        "optional_fields": [
          "percent",
          "data",
          "checkpoint"
        ],
        "status_values": [
          "start",
          "progress",
          "done",
          "error",
          "checkpoint"
        ]
      },
      "checkpoints": [
        {
          "id": "setup",
          "at_percent": 10,
          "description": "Module structure created"
        },
        {
          "id": "core",
          "at_percent": 40,
          "description": "Core logic implemented"
        },
        {
          "id": "integration",
          "at_percent": 60,
          "description": "Integration complete"
        },
        {
          "id": "tests",
          "at_percent": 80,
          "description": "Tests passing"
        },
        {
          "id": "docs",
          "at_percent": 100,
          "description": "Documentation complete"
        }
      ],
      "monitoring": {
        "metrics_to_track": [],
        "alerts": []
      }
    },
    "resource_requirements": {
      "estimated": {
        "cpu_cores": 1,
        "memory_mb": 1024,
        "disk_io_mbps": 10
      },
      "peak": {
        "cpu_cores": 2,
        "memory_mb": 2048,
        "disk_io_mbps": 50,
        "during": "compilation or testing"
      },
      "worker_capabilities_required": [
        "golang",
        "backend",
        "redis"
      ]
    },
    "scheduling_hints": {
      "priority": "medium",
      "preemptible": true,
      "retry_on_failure": true,
      "max_retries": 3,
      "checkpoint_capable": true
    },
    "duration": {
      "optimistic": 8,
      "mostLikely": 16,
      "pessimistic": 24
    },
    "shared_resources": {
      "exclusive_locks": [],
      "shared_limited": [
        {
          "resource": "test_redis",
          "quantity": 1
        }
      ],
      "creates": [],
      "modifies": []
    },
    "acceptance_checks": [
      {
        "type": "automated",
        "description": "Subscriptions with filters and secrets.",
        "script": "test_p2.t038.sh"
      },
      {
        "type": "automated",
        "description": "Delivery with retries, backoff, and DLH.",
        "script": "test_p2.t038.sh"
      },
      {
        "type": "automated",
        "description": "Test and replay supported via Admin API and TUI.",
        "script": "test_p2.t038.sh"
      },
      {
        "type": "manual",
        "description": "Define event schema + bus",
        "script": null
      },
      {
        "type": "manual",
        "description": "Implement webhook + NATS transports",
        "script": null
      }
    ],
    "evidence": [
      {
        "type": "plan",
        "source": "docs/ideas/event-hooks.md",
        "excerpt": "Emit events for job lifecycle changes (enqueued, started, succeeded, failed, DLQ) to external systems via webhooks or NATS. Signed payloads, backoff retries, and per\u2011queue filters provide safe, flexib",
        "confidence": 1.0,
        "rationale": "Primary feature specification"
      }
    ],
    "implementation_spec": {
      "implementation_checklist": [
        "Define event schema + bus",
        "Implement webhook + NATS transports",
        "Retry/backoff + DLH storage",
        "Admin API CRUD + test/replay",
        "TUI management panel",
        "Docs + samples"
      ],
      "technical_approach": [
        "Event bus:",
        "Internal dispatcher with typed events and subscriber backends.",
        "Events: job_enqueued, job_started, job_succeeded, job_failed, job_dlq, job_retried.",
        "Transports:",
        "Webhooks: POST JSON with HMAC signature, per\u2011subscription secret.",
        "NATS (optional): publish to subjects by event type and queue.",
        "Delivery semantics:",
        "At\u2011least\u2011once with exponential backoff; max attempts; dead\u2011letter for hooks.",
        "Idempotency key in headers; timestamp; correlation/trace IDs when available.",
        "Config:",
        "Subscriptions: matchers (queue, priority, result), endpoint/subject, headers, secret, rate cap.",
        "Health: last delivery status, retry counts, moving window success rate.",
        "Admin API:",
        "CRUD subscriptions, test delivery, list DLH (dead\u2011letter hooks) with replay.",
        "TUI:",
        "Minimal management panel: list subscriptions and status; trigger test; replay failed.",
        "Security: HMAC signing; optional mTLS; redact sensitive payload fields by pattern."
      ],
      "code_structure": {
        "main_package": "internal/event-hooks",
        "files": [
          "event-hooks.go - Main implementation",
          "types.go - Data structures",
          "handlers.go - Request handlers",
          "errors.go - Custom errors",
          "config.go - Configuration"
        ]
      }
    }
  },
  "dependencies": [],
  "instructions": {
    "on_complete": "Move this file to finished-tasks/P2.T038.json",
    "on_failure": "Move this file to failed-tasks/P2.T038.json",
    "on_help_needed": "Move to help-me/P2.T038.json",
    "note": "READ THE FULL TASK SPECIFICATION! All details are in the task field.",
    "resource_locks": {
      "exclusive_locks": [],
      "shared_limited": [
        {
          "resource": "test_redis",
          "quantity": 1
        }
      ],
      "creates": [],
      "modifies": []
    }
  }
}
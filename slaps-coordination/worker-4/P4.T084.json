{
  "task_id": "P4.T084",
  "created_at": "2025-09-14T19:41:47.150490Z",
  "task": {
    "id": "P4.T084",
    "feature_id": "F035",
    "title": "Implement Json Payload Studio",
    "description": "Implement task for Json Payload Studio",
    "boundaries": {
      "expected_complexity": {
        "value": "~ LoC",
        "breakdown": "Core logic (60%), Tests (25%), Integration (15%)"
      },
      "definition_of_done": {
        "criteria": [
          "All functions implemented per specification",
          "Unit tests passing with 80% coverage",
          "Integration tests passing",
          "Code reviewed and approved",
          "Documentation updated",
          "No linting errors",
          "Performance benchmarks met",
          "JSON lint and schema errors highlighted with line/col.",
          "Template list with fuzzy search and quick preview.",
          "Enqueue supports count, priority, delay/run\u2011at, and optional cron."
        ],
        "stop_when": "Core functionality complete; do NOT add extra features"
      },
      "scope": {
        "includes": [
          "internal/json-payload-studio/",
          "internal/json-payload-studio/*_test.go",
          "docs/api/json-payload-studio.md"
        ],
        "excludes": [
          "UI unless specified",
          "deployment configs"
        ],
        "restrictions": "Follow existing code patterns and style guide"
      }
    },
    "execution_guidance": {
      "logging": {
        "format": "JSON Lines (JSONL)",
        "required_fields": [
          "timestamp",
          "task_id",
          "step",
          "status",
          "message"
        ],
        "optional_fields": [
          "percent",
          "data",
          "checkpoint"
        ],
        "status_values": [
          "start",
          "progress",
          "done",
          "error",
          "checkpoint"
        ]
      },
      "checkpoints": [
        {
          "id": "setup",
          "at_percent": 10,
          "description": "Module structure created"
        },
        {
          "id": "core",
          "at_percent": 40,
          "description": "Core logic implemented"
        },
        {
          "id": "integration",
          "at_percent": 60,
          "description": "Integration complete"
        },
        {
          "id": "tests",
          "at_percent": 80,
          "description": "Tests passing"
        },
        {
          "id": "docs",
          "at_percent": 100,
          "description": "Documentation complete"
        }
      ],
      "monitoring": {
        "metrics_to_track": [],
        "alerts": []
      }
    },
    "resource_requirements": {
      "estimated": {
        "cpu_cores": 1,
        "memory_mb": 1024,
        "disk_io_mbps": 10
      },
      "peak": {
        "cpu_cores": 2,
        "memory_mb": 2048,
        "disk_io_mbps": 50,
        "during": "compilation or testing"
      },
      "worker_capabilities_required": [
        "golang",
        "backend",
        "redis"
      ]
    },
    "scheduling_hints": {
      "priority": "medium",
      "preemptible": true,
      "retry_on_failure": true,
      "max_retries": 3,
      "checkpoint_capable": true
    },
    "duration": {
      "optimistic": 8,
      "mostLikely": 16,
      "pessimistic": 24
    },
    "shared_resources": {
      "exclusive_locks": [
        "redis_schema"
      ],
      "shared_limited": [
        {
          "resource": "test_redis",
          "quantity": 1
        }
      ],
      "creates": [],
      "modifies": []
    },
    "acceptance_checks": [
      {
        "type": "automated",
        "description": "JSON lint and schema errors highlighted with line/col.",
        "script": "test_p4.t084.sh"
      },
      {
        "type": "automated",
        "description": "Template list with fuzzy search and quick preview.",
        "script": "test_p4.t084.sh"
      },
      {
        "type": "automated",
        "description": "Enqueue supports count, priority, delay/run\u2011at, and optional cron.",
        "script": "test_p4.t084.sh"
      },
      {
        "type": "manual",
        "description": "Diff/peek integration shows exactly what was sent.",
        "script": null
      },
      {
        "type": "manual",
        "description": "Implement editor widget + linting",
        "script": null
      }
    ],
    "evidence": [
      {
        "type": "plan",
        "source": "docs/ideas/json-payload-studio.md",
        "excerpt": "An in\u2011TUI JSON editor to author, validate, and enqueue job payloads. Includes templates, snippets, schema validation, scheduling (run\u2011at/cron), and pretty diff/peek integration for rapid iteration.\n\n>",
        "confidence": 1.0,
        "rationale": "Primary feature specification"
      }
    ],
    "implementation_spec": {
      "implementation_checklist": [
        "Implement editor widget + linting",
        "Template loader + snippets",
        "Schema validation + error UI",
        "Enqueue + schedule flow",
        "Diff/peek integration",
        "Docs + screenshots"
      ],
      "technical_approach": [
        "Editor: textinput/viewport hybrid with syntax highlight (lightweight), bracket matching, and JSON linting.",
        "Templates: load from `config/templates/*.json` or inline; snippet expansion (e.g., `now()`, `uuid()`).",
        "Validation: optional JSON Schema (draft 7) validation per queue/template; show errors inline.",
        "Enqueue: `e` submits to selected queue; `E` opens count + schedule options (run\u2011at ISO8601, optional cron spec).",
        "Safety: size/field caps; strip secrets from UI logs; confirm in non\u2011test envs.",
        "Integration: peek last enqueued sample; diff between current editor buffer and last run."
      ],
      "code_structure": {
        "main_package": "internal/json-payload-studio",
        "files": [
          "json-payload-studio.go - Main implementation",
          "types.go - Data structures",
          "handlers.go - Request handlers",
          "errors.go - Custom errors",
          "config.go - Configuration"
        ]
      }
    }
  },
  "dependencies": [],
  "instructions": {
    "on_complete": "Move this file to finished-tasks/P4.T084.json",
    "on_failure": "Move this file to failed-tasks/P4.T084.json",
    "on_help_needed": "Move to help-me/P4.T084.json",
    "note": "READ THE FULL TASK SPECIFICATION! All details are in the task field.",
    "resource_locks": {
      "exclusive_locks": [
        "redis_schema"
      ],
      "shared_limited": [
        {
          "resource": "test_redis",
          "quantity": 1
        }
      ],
      "creates": [],
      "modifies": []
    }
  }
}
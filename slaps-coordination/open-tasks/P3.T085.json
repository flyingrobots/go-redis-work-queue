{
  "task_id": "P3.T085",
  "created_at": "2025-09-14T19:41:47.150694Z",
  "task": {
    "id": "P3.T085",
    "feature_id": "F036",
    "title": "Design Worker Fleet Controls",
    "description": "Design task for Worker Fleet Controls",
    "boundaries": {
      "expected_complexity": {
        "value": "1 design doc, ~800-1200 lines",
        "breakdown": "Architecture (400), API spec (300), Data model (200), Diagrams (300)"
      },
      "definition_of_done": {
        "criteria": [
          "Architecture documented with Mermaid diagrams",
          "API endpoints specified in OpenAPI 3.0 format",
          "Data models defined with JSON Schema",
          "Integration points identified and documented",
          "Security threat model completed",
          "Performance requirements specified",
          "Testing strategy defined"
        ],
        "stop_when": "Design approved by architect; do NOT start implementation"
      },
      "scope": {
        "includes": [
          "docs/design/f036-design.md",
          "docs/api/f036-openapi.yaml",
          "docs/schemas/f036-schema.json"
        ],
        "excludes": [
          "implementation code",
          "tests",
          "deployment configs"
        ],
        "restrictions": "Must follow company design template"
      }
    },
    "execution_guidance": {
      "logging": {
        "format": "JSON Lines (JSONL)",
        "required_fields": [
          "timestamp",
          "task_id",
          "step",
          "status",
          "message"
        ],
        "optional_fields": [
          "percent",
          "data",
          "checkpoint"
        ],
        "status_values": [
          "start",
          "progress",
          "done",
          "error",
          "checkpoint"
        ]
      },
      "checkpoints": [
        {
          "id": "cp1",
          "at_percent": 25,
          "description": "Architecture draft complete"
        },
        {
          "id": "cp2",
          "at_percent": 50,
          "description": "API specification complete"
        },
        {
          "id": "cp3",
          "at_percent": 75,
          "description": "Data models and diagrams complete"
        },
        {
          "id": "cp4",
          "at_percent": 100,
          "description": "Review and approval"
        }
      ],
      "monitoring": {
        "metrics_to_track": [],
        "alerts": []
      }
    },
    "resource_requirements": {
      "estimated": {
        "cpu_cores": 1,
        "memory_mb": 512,
        "disk_io_mbps": 10
      },
      "peak": {
        "cpu_cores": 2,
        "memory_mb": 1024,
        "disk_io_mbps": 50,
        "during": "compilation or testing"
      },
      "worker_capabilities_required": [
        "documentation",
        "architecture",
        "api_design"
      ]
    },
    "scheduling_hints": {
      "priority": "medium",
      "preemptible": true,
      "retry_on_failure": true,
      "max_retries": 3,
      "checkpoint_capable": true
    },
    "duration": {
      "optimistic": 4,
      "mostLikely": 8,
      "pessimistic": 16
    },
    "shared_resources": {
      "exclusive_locks": [],
      "shared_limited": [],
      "creates": [],
      "modifies": []
    },
    "acceptance_checks": [
      {
        "type": "automated",
        "description": "Admin API supplies workers list and control endpoints (pause/resume/drain).",
        "script": "test_p3.t085.sh"
      },
      {
        "type": "automated",
        "description": "TUI lists workers, supports multi\u2011select, and shows action progress.",
        "script": "test_p3.t085.sh"
      },
      {
        "type": "automated",
        "description": "Safety checks prevent accidental global stoppage.",
        "script": "test_p3.t085.sh"
      },
      {
        "type": "manual",
        "description": "Admin: workers list + control endpoints",
        "script": null
      },
      {
        "type": "manual",
        "description": "Worker: honor pause/drain signals; expose state in heartbeat",
        "script": null
      }
    ],
    "evidence": [
      {
        "type": "plan",
        "source": "docs/ideas/worker-fleet-controls.md",
        "excerpt": "Operate the worker fleet from the TUI: pause/resume/drain nodes, rolling restarts, and live worker summaries (ID, last heartbeat, active job). Provide precise controls with confirmations and safeguard",
        "confidence": 1.0,
        "rationale": "Primary feature specification"
      }
    ],
    "implementation_spec": {
      "design_sections": [
        "Executive Summary",
        "System Architecture",
        "API Specification",
        "Data Models",
        "Security Model",
        "Performance Requirements",
        "Testing Strategy",
        "Deployment Plan"
      ],
      "deliverables": [
        "Architecture document (Markdown + Mermaid)",
        "OpenAPI 3.0 specification",
        "JSON Schema definitions",
        "Security threat model",
        "Performance benchmarks"
      ],
      "technical_approach": [
        "Registry: persist worker IDs, heartbeats, and current job (keyed by worker). Already partially present\u2014extend admin for list/read.",
        "Commands:",
        "Pause: worker stops pulling new jobs; finishes current if any.",
        "Resume: worker resumes pulls.",
        "Drain: like pause, then exit after current job; pool\u2011wide drain option.",
        "Rolling restart: N\u2011at\u2011a\u2011time drain+exit with max unavailable.",
        "TUI: Workers tab lists workers with statuses; select one/many; action bar with confirmations showing impact.",
        "Safety: prevent draining all by mistake; require typed confirmation in prod; show ETA estimates from running jobs.",
        "Audit: log who/when/what with success/failure; expose via Admin API."
      ],
      "user_stories": [
        "I can see a list of workers with last heartbeat and active job.",
        "I can pause or drain a worker safely with a confirmation and see state transition.",
        "I can perform a rolling restart with a concurrency cap."
      ]
    }
  },
  "dependencies": [],
  "instructions": {
    "on_complete": "Move this file to finished-tasks/P3.T085.json",
    "on_failure": "Move this file to failed-tasks/P3.T085.json",
    "on_help_needed": "Move to help-me/P3.T085.json",
    "note": "READ THE FULL TASK SPECIFICATION! All details are in the task field.",
    "resource_locks": {
      "exclusive_locks": [],
      "shared_limited": [],
      "creates": [],
      "modifies": []
    }
  }
}
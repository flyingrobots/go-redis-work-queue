{
  "task_id": "P3.T035",
  "created_at": "2025-09-14T19:41:47.132642Z",
  "task": {
    "id": "P3.T035",
    "feature_id": "F013",
    "title": "Design Canary Deployments",
    "description": "Design task for Canary Deployments",
    "boundaries": {
      "expected_complexity": {
        "value": "1 design doc, ~800-1200 lines",
        "breakdown": "Architecture (400), API spec (300), Data model (200), Diagrams (300)"
      },
      "definition_of_done": {
        "criteria": [
          "Architecture documented with Mermaid diagrams",
          "API endpoints specified in OpenAPI 3.0 format",
          "Data models defined with JSON Schema",
          "Integration points identified and documented",
          "Security threat model completed",
          "Performance requirements specified",
          "Testing strategy defined"
        ],
        "stop_when": "Design approved by architect; do NOT start implementation"
      },
      "scope": {
        "includes": [
          "docs/design/f013-design.md",
          "docs/api/f013-openapi.yaml",
          "docs/schemas/f013-schema.json"
        ],
        "excludes": [
          "implementation code",
          "tests",
          "deployment configs"
        ],
        "restrictions": "Must follow company design template"
      }
    },
    "execution_guidance": {
      "logging": {
        "format": "JSON Lines (JSONL)",
        "required_fields": [
          "timestamp",
          "task_id",
          "step",
          "status",
          "message"
        ],
        "optional_fields": [
          "percent",
          "data",
          "checkpoint"
        ],
        "status_values": [
          "start",
          "progress",
          "done",
          "error",
          "checkpoint"
        ]
      },
      "checkpoints": [
        {
          "id": "cp1",
          "at_percent": 25,
          "description": "Architecture draft complete"
        },
        {
          "id": "cp2",
          "at_percent": 50,
          "description": "API specification complete"
        },
        {
          "id": "cp3",
          "at_percent": 75,
          "description": "Data models and diagrams complete"
        },
        {
          "id": "cp4",
          "at_percent": 100,
          "description": "Review and approval"
        }
      ],
      "monitoring": {
        "metrics_to_track": [],
        "alerts": []
      }
    },
    "resource_requirements": {
      "estimated": {
        "cpu_cores": 1,
        "memory_mb": 512,
        "disk_io_mbps": 10
      },
      "peak": {
        "cpu_cores": 2,
        "memory_mb": 1024,
        "disk_io_mbps": 50,
        "during": "compilation or testing"
      },
      "worker_capabilities_required": [
        "documentation",
        "architecture",
        "api_design"
      ]
    },
    "scheduling_hints": {
      "priority": "medium",
      "preemptible": true,
      "retry_on_failure": true,
      "max_retries": 3,
      "checkpoint_capable": true
    },
    "duration": {
      "optimistic": 4,
      "mostLikely": 8,
      "pessimistic": 16
    },
    "shared_resources": {
      "exclusive_locks": [],
      "shared_limited": [],
      "creates": [],
      "modifies": []
    },
    "acceptance_checks": [
      {
        "type": "automated",
        "description": "Version\u2011aware routing with configurable percentages.",
        "script": "test_p3.t035.sh"
      },
      {
        "type": "automated",
        "description": "Side\u2011by\u2011side SLO metrics with alerts on regression.",
        "script": "test_p3.t035.sh"
      },
      {
        "type": "automated",
        "description": "Promote/rollback flows with confirmations and drain behavior.",
        "script": "test_p3.t035.sh"
      },
      {
        "type": "manual",
        "description": "Worker version/label plumbing",
        "script": null
      },
      {
        "type": "manual",
        "description": "Routing implementation (split queues or groups)",
        "script": null
      }
    ],
    "evidence": [
      {
        "type": "plan",
        "source": "docs/ideas/canary-deployments.md",
        "excerpt": "Safely roll out new worker versions by routing a configurable percentage of jobs to canaries, compare key SLOs, and promote or roll back quickly. Support sticky routing and per\u2011queue/tenant canaries.\n",
        "confidence": 1.0,
        "rationale": "Primary feature specification"
      }
    ],
    "implementation_spec": {
      "design_sections": [
        "Executive Summary",
        "System Architecture",
        "API Specification",
        "Data Models",
        "Security Model",
        "Performance Requirements",
        "Testing Strategy",
        "Deployment Plan"
      ],
      "deliverables": [
        "Architecture document (Markdown + Mermaid)",
        "OpenAPI 3.0 specification",
        "JSON Schema definitions",
        "Security threat model",
        "Performance benchmarks"
      ],
      "technical_approach": [
        "Versioning & labels:",
        "Workers advertise `version` and `lane` (stable/canary) via heartbeat/registration.",
        "Routing strategies:",
        "Split queues: enqueue sampler routes N% to `queue@canary` (separate key); canary workers only consume `@canary`.",
        "Stream groups (if using Streams): distinct consumer group per version with weighted claim.",
        "Hash\u2011based sticky: route by job ID hash for consistency during a canary window.",
        "Control plane:",
        "Admin API to configure percentages per queue/tenant and window duration.",
        "Automatic promotion on green metrics or manual confirmation.",
        "Fast rollback sets canary to 0% and drains remaining.",
        "Observability:",
        "Compare p50/p95 latency, error/DLQ rates, resource usage per version.",
        "TUI panel with sparkline deltas and a one\u2011click promote/rollback (with confirm).",
        "Safety:",
        "Guard critical queues with max canary %; block incompatible schema changes without a feature flag."
      ],
      "user_stories": [
        "I can set a 10% canary for `payments` and watch metrics before promoting.",
        "I can roll back immediately with a single action when errors spike."
      ]
    }
  },
  "dependencies": [],
  "instructions": {
    "on_complete": "Move this file to finished-tasks/P3.T035.json",
    "on_failure": "Move this file to failed-tasks/P3.T035.json",
    "on_help_needed": "Move to help-me/P3.T035.json",
    "note": "READ THE FULL TASK SPECIFICATION! All details are in the task field.",
    "resource_locks": {
      "exclusive_locks": [],
      "shared_limited": [],
      "creates": [],
      "modifies": []
    }
  }
}
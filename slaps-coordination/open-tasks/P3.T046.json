{
  "task_id": "P3.T046",
  "created_at": "2025-09-14T19:41:47.138195Z",
  "task": {
    "id": "P3.T046",
    "feature_id": "F018",
    "title": "Design Long Term Archives",
    "description": "Design task for Long Term Archives",
    "boundaries": {
      "expected_complexity": {
        "value": "1 design doc, ~800-1200 lines",
        "breakdown": "Architecture (400), API spec (300), Data model (200), Diagrams (300)"
      },
      "definition_of_done": {
        "criteria": [
          "Architecture documented with Mermaid diagrams",
          "API endpoints specified in OpenAPI 3.0 format",
          "Data models defined with JSON Schema",
          "Integration points identified and documented",
          "Security threat model completed",
          "Performance requirements specified",
          "Testing strategy defined"
        ],
        "stop_when": "Design approved by architect; do NOT start implementation"
      },
      "scope": {
        "includes": [
          "docs/design/f018-design.md",
          "docs/api/f018-openapi.yaml",
          "docs/schemas/f018-schema.json"
        ],
        "excludes": [
          "implementation code",
          "tests",
          "deployment configs"
        ],
        "restrictions": "Must follow company design template"
      }
    },
    "execution_guidance": {
      "logging": {
        "format": "JSON Lines (JSONL)",
        "required_fields": [
          "timestamp",
          "task_id",
          "step",
          "status",
          "message"
        ],
        "optional_fields": [
          "percent",
          "data",
          "checkpoint"
        ],
        "status_values": [
          "start",
          "progress",
          "done",
          "error",
          "checkpoint"
        ]
      },
      "checkpoints": [
        {
          "id": "cp1",
          "at_percent": 25,
          "description": "Architecture draft complete"
        },
        {
          "id": "cp2",
          "at_percent": 50,
          "description": "API specification complete"
        },
        {
          "id": "cp3",
          "at_percent": 75,
          "description": "Data models and diagrams complete"
        },
        {
          "id": "cp4",
          "at_percent": 100,
          "description": "Review and approval"
        }
      ],
      "monitoring": {
        "metrics_to_track": [],
        "alerts": []
      }
    },
    "resource_requirements": {
      "estimated": {
        "cpu_cores": 1,
        "memory_mb": 512,
        "disk_io_mbps": 10
      },
      "peak": {
        "cpu_cores": 2,
        "memory_mb": 1024,
        "disk_io_mbps": 50,
        "during": "compilation or testing"
      },
      "worker_capabilities_required": [
        "documentation",
        "architecture",
        "api_design"
      ]
    },
    "scheduling_hints": {
      "priority": "medium",
      "preemptible": true,
      "retry_on_failure": true,
      "max_retries": 3,
      "checkpoint_capable": true
    },
    "duration": {
      "optimistic": 4,
      "mostLikely": 8,
      "pessimistic": 16
    },
    "shared_resources": {
      "exclusive_locks": [],
      "shared_limited": [],
      "creates": [],
      "modifies": []
    },
    "acceptance_checks": [
      {
        "type": "automated",
        "description": "Exporter writes to ClickHouse/S3 with retries and idempotency.",
        "script": "test_p3.t046.sh"
      },
      {
        "type": "automated",
        "description": "Schema versioning with backward compatibility.",
        "script": "test_p3.t046.sh"
      },
      {
        "type": "automated",
        "description": "Configurable retention in Redis and archive.",
        "script": "test_p3.t046.sh"
      },
      {
        "type": "manual",
        "description": "Define archive schema + sampling",
        "script": null
      },
      {
        "type": "manual",
        "description": "Build exporter (ClickHouse + S3/Parquet)",
        "script": null
      }
    ],
    "evidence": [
      {
        "type": "plan",
        "source": "docs/ideas/long-term-archives.md",
        "excerpt": "Stream completed jobs and key metadata to long\u2011term storage (ClickHouse or S3/Parquet) with retention controls. Provide fast querying for forensics and reporting while keeping Redis slim.\n\n> [!note]- ",
        "confidence": 1.0,
        "rationale": "Primary feature specification"
      }
    ],
    "implementation_spec": {
      "design_sections": [
        "Executive Summary",
        "System Architecture",
        "API Specification",
        "Data Models",
        "Security Model",
        "Performance Requirements",
        "Testing Strategy",
        "Deployment Plan"
      ],
      "deliverables": [
        "Architecture document (Markdown + Mermaid)",
        "OpenAPI 3.0 specification",
        "JSON Schema definitions",
        "Security threat model",
        "Performance benchmarks"
      ],
      "technical_approach": [
        "Export path:",
        "Producer: append to a Completed stream (list/stream) on success/failure; optional sampling.",
        "Exporter service: batch reads and writes to ClickHouse (insert) or S3 (Parquet files) with schema evolution.",
        "Schema:",
        "Core: job_id, queue, priority, timestamps (enqueue/start/end), outcome, retries, worker_id, size, trace_id.",
        "Payload handling: optional redacted payload snapshot or hashes.",
        "Retention:",
        "TTL in Redis; archive window controls; GDPR delete hooks to remove payload snapshots.",
        "TUI:",
        "Link to sample queries and recent export status; not a full query UI.",
        "Observability:",
        "Lag metrics, batch sizes, write errors; alerts when exporters fall behind."
      ],
      "user_stories": [
        "I can query last 90 days of completed jobs by queue and outcome.",
        "I can verify Redis stays within retention while exports keep up."
      ]
    }
  },
  "dependencies": [],
  "instructions": {
    "on_complete": "Move this file to finished-tasks/P3.T046.json",
    "on_failure": "Move this file to failed-tasks/P3.T046.json",
    "on_help_needed": "Move to help-me/P3.T046.json",
    "note": "READ THE FULL TASK SPECIFICATION! All details are in the task field.",
    "resource_locks": {
      "exclusive_locks": [],
      "shared_limited": [],
      "creates": [],
      "modifies": []
    }
  }
}
{
  "task_id": "P3.T042",
  "created_at": "2025-09-14T19:41:47.136922Z",
  "task": {
    "id": "P3.T042",
    "feature_id": "F016",
    "title": "Design Job Budgeting",
    "description": "Design task for Job Budgeting",
    "boundaries": {
      "expected_complexity": {
        "value": "1 design doc, ~800-1200 lines",
        "breakdown": "Architecture (400), API spec (300), Data model (200), Diagrams (300)"
      },
      "definition_of_done": {
        "criteria": [
          "Architecture documented with Mermaid diagrams",
          "API endpoints specified in OpenAPI 3.0 format",
          "Data models defined with JSON Schema",
          "Integration points identified and documented",
          "Security threat model completed",
          "Performance requirements specified",
          "Testing strategy defined"
        ],
        "stop_when": "Design approved by architect; do NOT start implementation"
      },
      "scope": {
        "includes": [
          "docs/design/f016-design.md",
          "docs/api/f016-openapi.yaml",
          "docs/schemas/f016-schema.json"
        ],
        "excludes": [
          "implementation code",
          "tests",
          "deployment configs"
        ],
        "restrictions": "Must follow company design template"
      }
    },
    "execution_guidance": {
      "logging": {
        "format": "JSON Lines (JSONL)",
        "required_fields": [
          "timestamp",
          "task_id",
          "step",
          "status",
          "message"
        ],
        "optional_fields": [
          "percent",
          "data",
          "checkpoint"
        ],
        "status_values": [
          "start",
          "progress",
          "done",
          "error",
          "checkpoint"
        ]
      },
      "checkpoints": [
        {
          "id": "cp1",
          "at_percent": 25,
          "description": "Architecture draft complete"
        },
        {
          "id": "cp2",
          "at_percent": 50,
          "description": "API specification complete"
        },
        {
          "id": "cp3",
          "at_percent": 75,
          "description": "Data models and diagrams complete"
        },
        {
          "id": "cp4",
          "at_percent": 100,
          "description": "Review and approval"
        }
      ],
      "monitoring": {
        "metrics_to_track": [],
        "alerts": []
      }
    },
    "resource_requirements": {
      "estimated": {
        "cpu_cores": 1,
        "memory_mb": 512,
        "disk_io_mbps": 10
      },
      "peak": {
        "cpu_cores": 2,
        "memory_mb": 1024,
        "disk_io_mbps": 50,
        "during": "compilation or testing"
      },
      "worker_capabilities_required": [
        "documentation",
        "architecture",
        "api_design"
      ]
    },
    "scheduling_hints": {
      "priority": "medium",
      "preemptible": true,
      "retry_on_failure": true,
      "max_retries": 3,
      "checkpoint_capable": true
    },
    "duration": {
      "optimistic": 4,
      "mostLikely": 8,
      "pessimistic": 16
    },
    "shared_resources": {
      "exclusive_locks": [],
      "shared_limited": [],
      "creates": [],
      "modifies": []
    },
    "acceptance_checks": [
      {
        "type": "automated",
        "description": "Cost calculation with pluggable weights; daily aggregates.",
        "script": "test_p3.t042.sh"
      },
      {
        "type": "automated",
        "description": "Budgets with warning/enforcement thresholds and notifications.",
        "script": "test_p3.t042.sh"
      },
      {
        "type": "automated",
        "description": "TUI shows spend, forecast, and top drivers.",
        "script": "test_p3.t042.sh"
      },
      {
        "type": "manual",
        "description": "Define cost model + calibration suite",
        "script": null
      },
      {
        "type": "manual",
        "description": "Implement capture and aggregation",
        "script": null
      }
    ],
    "evidence": [
      {
        "type": "plan",
        "source": "docs/ideas/job-budgeting.md",
        "excerpt": "Track and allocate cost per job/tenant using measured resource usage and a simple cost model. Define monthly budgets, show spend vs. budget, forecast burn, and apply optional enforcement (soft warning",
        "confidence": 1.0,
        "rationale": "Primary feature specification"
      }
    ],
    "implementation_spec": {
      "design_sections": [
        "Executive Summary",
        "System Architecture",
        "API Specification",
        "Data Models",
        "Security Model",
        "Performance Requirements",
        "Testing Strategy",
        "Deployment Plan"
      ],
      "deliverables": [
        "Architecture document (Markdown + Mermaid)",
        "OpenAPI 3.0 specification",
        "JSON Schema definitions",
        "Security threat model",
        "Performance benchmarks"
      ],
      "technical_approach": [
        "Cost model:",
        "Components: processing time (CPU), memory footprint proxy, payload size, Redis ops, egress hints.",
        "Assign weights/cost rates; calibrate with benchmarks and environment multipliers.",
        "Data capture:",
        "Worker reports per\u2011job timings and optional resource proxies; producer reports payload size.",
        "Aggregate by tenant/queue/day; store in a compact table (ClickHouse optional).",
        "Budgets & policies:",
        "Define budgets per tenant/queue; thresholds for warning/limit.",
        "Enforcement ladder: warn producers \u2192 suggest backpressure \u2192 throttle low\u2011priority work; never drop without explicit policy.",
        "Integration:",
        "Advanced Rate Limiting uses remaining budget as an input for weights.",
        "Event Hooks for budget threshold notifications.",
        "TUI:",
        "Budgets panel: current spend, forecast to month\u2011end, top cost drivers, and recent spikes; drill into job samples."
      ],
      "user_stories": [
        "I can set budgets and see spend by tenant and queue.",
        "I receive early warnings and suggestions if I'm overspending."
      ]
    }
  },
  "dependencies": [],
  "instructions": {
    "on_complete": "Move this file to finished-tasks/P3.T042.json",
    "on_failure": "Move this file to failed-tasks/P3.T042.json",
    "on_help_needed": "Move to help-me/P3.T042.json",
    "note": "READ THE FULL TASK SPECIFICATION! All details are in the task field.",
    "resource_locks": {
      "exclusive_locks": [],
      "shared_limited": [],
      "creates": [],
      "modifies": []
    }
  }
}
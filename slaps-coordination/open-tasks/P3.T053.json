{
  "task_id": "P3.T053",
  "created_at": "2025-09-14T19:41:47.140729Z",
  "task": {
    "id": "P3.T053",
    "feature_id": "F021",
    "title": "Design Producer Backpressure",
    "description": "Design task for Producer Backpressure",
    "boundaries": {
      "expected_complexity": {
        "value": "1 design doc, ~800-1200 lines",
        "breakdown": "Architecture (400), API spec (300), Data model (200), Diagrams (300)"
      },
      "definition_of_done": {
        "criteria": [
          "Architecture documented with Mermaid diagrams",
          "API endpoints specified in OpenAPI 3.0 format",
          "Data models defined with JSON Schema",
          "Integration points identified and documented",
          "Security threat model completed",
          "Performance requirements specified",
          "Testing strategy defined"
        ],
        "stop_when": "Design approved by architect; do NOT start implementation"
      },
      "scope": {
        "includes": [
          "docs/design/f021-design.md",
          "docs/api/f021-openapi.yaml",
          "docs/schemas/f021-schema.json"
        ],
        "excludes": [
          "implementation code",
          "tests",
          "deployment configs"
        ],
        "restrictions": "Must follow company design template"
      }
    },
    "execution_guidance": {
      "logging": {
        "format": "JSON Lines (JSONL)",
        "required_fields": [
          "timestamp",
          "task_id",
          "step",
          "status",
          "message"
        ],
        "optional_fields": [
          "percent",
          "data",
          "checkpoint"
        ],
        "status_values": [
          "start",
          "progress",
          "done",
          "error",
          "checkpoint"
        ]
      },
      "checkpoints": [
        {
          "id": "cp1",
          "at_percent": 25,
          "description": "Architecture draft complete"
        },
        {
          "id": "cp2",
          "at_percent": 50,
          "description": "API specification complete"
        },
        {
          "id": "cp3",
          "at_percent": 75,
          "description": "Data models and diagrams complete"
        },
        {
          "id": "cp4",
          "at_percent": 100,
          "description": "Review and approval"
        }
      ],
      "monitoring": {
        "metrics_to_track": [],
        "alerts": []
      }
    },
    "resource_requirements": {
      "estimated": {
        "cpu_cores": 1,
        "memory_mb": 512,
        "disk_io_mbps": 10
      },
      "peak": {
        "cpu_cores": 2,
        "memory_mb": 1024,
        "disk_io_mbps": 50,
        "during": "compilation or testing"
      },
      "worker_capabilities_required": [
        "documentation",
        "architecture",
        "api_design"
      ]
    },
    "scheduling_hints": {
      "priority": "medium",
      "preemptible": true,
      "retry_on_failure": true,
      "max_retries": 3,
      "checkpoint_capable": true
    },
    "duration": {
      "optimistic": 4,
      "mostLikely": 8,
      "pessimistic": 16
    },
    "shared_resources": {
      "exclusive_locks": [],
      "shared_limited": [],
      "creates": [],
      "modifies": []
    },
    "acceptance_checks": [
      {
        "type": "automated",
        "description": "Backpressure controller with thresholds and jittered polling.",
        "script": "test_p3.t053.sh"
      },
      {
        "type": "automated",
        "description": "Circuit breaker with configurable trip criteria and recovery.",
        "script": "test_p3.t053.sh"
      },
      {
        "type": "automated",
        "description": "Metrics exported for throttle and shed decisions.",
        "script": "test_p3.t053.sh"
      },
      {
        "type": "manual",
        "description": "Define thresholds and controller",
        "script": null
      },
      {
        "type": "manual",
        "description": "Implement Go SDK helper",
        "script": null
      }
    ],
    "evidence": [
      {
        "type": "plan",
        "source": "docs/ideas/producer-backpressure.md",
        "excerpt": "Provide producers with real\u2011time backpressure signals and helpers to adapt enqueue rate when queues are saturated. Offer SDK shims that expose `SuggestThrottle()` and circuit breaking by priority.\n\n> ",
        "confidence": 1.0,
        "rationale": "Primary feature specification"
      }
    ],
    "implementation_spec": {
      "design_sections": [
        "Executive Summary",
        "System Architecture",
        "API Specification",
        "Data Models",
        "Security Model",
        "Performance Requirements",
        "Testing Strategy",
        "Deployment Plan"
      ],
      "deliverables": [
        "Architecture document (Markdown + Mermaid)",
        "OpenAPI 3.0 specification",
        "JSON Schema definitions",
        "Security threat model",
        "Performance benchmarks"
      ],
      "technical_approach": [
        "Signals:",
        "Poll Admin API stats (backlog length, age, rate limit budget) with jitter.",
        "Expose per\u2011queue thresholds and target backlog windows.",
        "Optional push channel via Event Hooks for threshold crossings.",
        "SDK helpers (Go first):",
        "`BackpressureController` with `SuggestThrottle()` returning sleep/delay hints.",
        "Circuit breaker for enqueue (open on sustained saturation; half\u2011open probes).",
        "Priority\u2011aware hints (high protected, low sheds first).",
        "Protocol hints:",
        "Include rate/budget headers in API responses when using HTTP Admin API.",
        "Producer integration:",
        "Simple wrapper: `bp.Run(ctx, func() { enqueue(...) })` schedules work to hints.",
        "Metrics: observed throttle, shed events, breaker state."
      ],
      "user_stories": [
        "I can adopt a small helper and see my enqueue smooth under saturation.",
        "I can see backpressure metrics and confirm fewer DLQs and timeouts."
      ]
    }
  },
  "dependencies": [],
  "instructions": {
    "on_complete": "Move this file to finished-tasks/P3.T053.json",
    "on_failure": "Move this file to failed-tasks/P3.T053.json",
    "on_help_needed": "Move to help-me/P3.T053.json",
    "note": "READ THE FULL TASK SPECIFICATION! All details are in the task field.",
    "resource_locks": {
      "exclusive_locks": [],
      "shared_limited": [],
      "creates": [],
      "modifies": []
    }
  }
}
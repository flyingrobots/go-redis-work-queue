{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://api.example.com/schemas/trace-drilldown-log-tail/v1",
  "title": "Trace Drilldown Log Tail Schema",
  "description": "JSON Schema definitions for trace integration and log streaming data models",
  "definitions": {
    "TraceContext": {
      "type": "object",
      "title": "Trace Context",
      "description": "Distributed tracing context information extracted from job execution",
      "properties": {
        "trace_id": {
          "type": "string",
          "pattern": "^[a-f0-9]{32}$",
          "description": "128-bit trace identifier in hex format",
          "example": "4bf92f3577b34da6a3ce929d0e0e4736"
        },
        "span_id": {
          "type": "string",
          "pattern": "^[a-f0-9]{16}$",
          "description": "64-bit span identifier in hex format",
          "example": "00f067aa0ba902b7"
        },
        "parent_span_id": {
          "type": "string",
          "pattern": "^[a-f0-9]{16}$",
          "description": "64-bit parent span identifier in hex format",
          "example": "00f067aa0ba902b6"
        },
        "flags": {
          "type": "integer",
          "description": "Trace flags indicating sampling decisions",
          "minimum": 0,
          "maximum": 255,
          "example": 1
        },
        "baggage": {
          "type": "object",
          "description": "Key-value pairs propagated through the trace",
          "additionalProperties": {
            "type": "string"
          },
          "example": {
            "user_id": "user123",
            "request_id": "req456"
          }
        },
        "extracted_from": {
          "type": "string",
          "enum": ["headers", "payload", "metadata"],
          "description": "Source from which trace context was extracted"
        },
        "extraction_time": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when trace context was extracted"
        },
        "job_id": {
          "type": "string",
          "description": "Associated job identifier",
          "example": "job_12345"
        },
        "worker_id": {
          "type": "string",
          "description": "Worker that processed the job",
          "example": "worker_3"
        }
      },
      "required": ["trace_id", "span_id", "extracted_from", "extraction_time"],
      "additionalProperties": false
    },

    "TraceSpan": {
      "type": "object",
      "title": "Trace Span",
      "description": "Individual span within a distributed trace",
      "properties": {
        "trace_id": {
          "type": "string",
          "pattern": "^[a-f0-9]{32}$",
          "description": "Trace identifier this span belongs to"
        },
        "span_id": {
          "type": "string",
          "pattern": "^[a-f0-9]{16}$",
          "description": "Unique span identifier"
        },
        "parent_span_id": {
          "type": "string",
          "pattern": "^[a-f0-9]{16}$",
          "description": "Parent span identifier, null for root spans"
        },
        "operation_name": {
          "type": "string",
          "description": "Human-readable operation name",
          "minLength": 1,
          "maxLength": 256,
          "example": "process_job"
        },
        "service_name": {
          "type": "string",
          "description": "Service that created this span",
          "minLength": 1,
          "maxLength": 128,
          "example": "queue-worker"
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "Span start timestamp"
        },
        "end_time": {
          "type": "string",
          "format": "date-time",
          "description": "Span end timestamp"
        },
        "duration_ms": {
          "type": "integer",
          "description": "Span duration in milliseconds",
          "minimum": 0,
          "maximum": 3600000,
          "example": 234
        },
        "status": {
          "type": "string",
          "enum": ["ok", "error", "timeout", "cancelled"],
          "description": "Span completion status"
        },
        "tags": {
          "type": "object",
          "description": "Key-value metadata for the span",
          "additionalProperties": {
            "type": "string"
          },
          "properties": {
            "component": {
              "type": "string",
              "description": "Component or library name"
            },
            "span.kind": {
              "type": "string",
              "enum": ["client", "server", "producer", "consumer", "internal"]
            },
            "http.method": {
              "type": "string",
              "description": "HTTP request method"
            },
            "http.status_code": {
              "type": "string",
              "pattern": "^[1-5][0-9][0-9]$",
              "description": "HTTP response status code"
            },
            "db.type": {
              "type": "string",
              "description": "Database type"
            },
            "db.statement": {
              "type": "string",
              "description": "Database query statement"
            },
            "error": {
              "type": "string",
              "enum": ["true", "false"],
              "description": "Whether span represents an error"
            }
          },
          "example": {
            "component": "queue",
            "job.id": "job_12345",
            "worker.id": "worker_3",
            "span.kind": "internal"
          }
        },
        "logs": {
          "type": "array",
          "description": "Structured log events within the span",
          "items": {
            "type": "object",
            "properties": {
              "timestamp": {
                "type": "string",
                "format": "date-time",
                "description": "Log event timestamp"
              },
              "level": {
                "type": "string",
                "enum": ["trace", "debug", "info", "warn", "error", "fatal"],
                "description": "Log level"
              },
              "message": {
                "type": "string",
                "description": "Log message",
                "maxLength": 1024
              },
              "fields": {
                "type": "object",
                "description": "Additional structured fields",
                "additionalProperties": true
              }
            },
            "required": ["timestamp", "message"],
            "additionalProperties": false
          }
        },
        "references": {
          "type": "array",
          "description": "References to other spans",
          "items": {
            "type": "object",
            "properties": {
              "ref_type": {
                "type": "string",
                "enum": ["childOf", "followsFrom"],
                "description": "Type of reference"
              },
              "trace_id": {
                "type": "string",
                "pattern": "^[a-f0-9]{32}$"
              },
              "span_id": {
                "type": "string",
                "pattern": "^[a-f0-9]{16}$"
              }
            },
            "required": ["ref_type", "trace_id", "span_id"],
            "additionalProperties": false
          }
        }
      },
      "required": ["trace_id", "span_id", "operation_name", "service_name", "start_time"],
      "additionalProperties": false
    },

    "LogEntry": {
      "type": "object",
      "title": "Log Entry",
      "description": "Structured log entry with correlation metadata",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Log entry timestamp"
        },
        "level": {
          "type": "string",
          "enum": ["trace", "debug", "info", "warn", "error", "fatal"],
          "description": "Log severity level"
        },
        "service": {
          "type": "string",
          "description": "Service that generated the log",
          "minLength": 1,
          "maxLength": 128,
          "example": "queue-worker"
        },
        "component": {
          "type": "string",
          "description": "Component within the service",
          "maxLength": 64,
          "example": "job-processor"
        },
        "job_id": {
          "type": "string",
          "description": "Associated job identifier",
          "example": "job_12345"
        },
        "worker_id": {
          "type": "string",
          "description": "Worker that generated the log",
          "example": "worker_3"
        },
        "queue_name": {
          "type": "string",
          "description": "Queue associated with the log",
          "example": "high-priority"
        },
        "trace_id": {
          "type": "string",
          "pattern": "^[a-f0-9]{32}$",
          "description": "Associated trace identifier"
        },
        "span_id": {
          "type": "string",
          "pattern": "^[a-f0-9]{16}$",
          "description": "Associated span identifier"
        },
        "message": {
          "type": "string",
          "description": "Primary log message",
          "minLength": 1,
          "maxLength": 4096
        },
        "attributes": {
          "type": "object",
          "description": "Additional structured attributes",
          "additionalProperties": true,
          "properties": {
            "duration_ms": {
              "type": "integer",
              "description": "Operation duration in milliseconds"
            },
            "error_code": {
              "type": "string",
              "description": "Application-specific error code"
            },
            "user_id": {
              "type": "string",
              "description": "User associated with the operation"
            },
            "request_id": {
              "type": "string",
              "description": "Request identifier"
            },
            "correlation_id": {
              "type": "string",
              "description": "Business correlation identifier"
            }
          },
          "example": {
            "duration_ms": 234,
            "retry_count": 2,
            "error_code": "TIMEOUT"
          }
        },
        "source": {
          "type": "object",
          "description": "Source location information",
          "properties": {
            "host": {
              "type": "string",
              "description": "Hostname or container name",
              "example": "worker-pod-abc123"
            },
            "container": {
              "type": "string",
              "description": "Container identifier",
              "example": "queue-worker-container"
            },
            "file": {
              "type": "string",
              "description": "Source file path",
              "example": "/app/src/worker.go"
            },
            "line": {
              "type": "integer",
              "description": "Source line number",
              "minimum": 1,
              "example": 123
            },
            "function": {
              "type": "string",
              "description": "Function or method name",
              "example": "processJob"
            }
          },
          "additionalProperties": false
        },
        "thread_id": {
          "type": "string",
          "description": "Thread or goroutine identifier"
        },
        "process_id": {
          "type": "integer",
          "description": "Process identifier"
        }
      },
      "required": ["timestamp", "level", "message"],
      "additionalProperties": false
    },

    "LogStream": {
      "type": "object",
      "title": "Log Stream",
      "description": "Configuration and state for a real-time log stream",
      "properties": {
        "stream_id": {
          "type": "string",
          "description": "Unique stream identifier",
          "pattern": "^stream_[a-zA-Z0-9]+$",
          "example": "stream_001"
        },
        "user_id": {
          "type": "string",
          "description": "User who owns the stream",
          "example": "user123"
        },
        "filters": {
          "type": "object",
          "description": "Filters applied to the log stream",
          "properties": {
            "job_id": {
              "type": "string",
              "description": "Filter by specific job ID",
              "example": "job_12345"
            },
            "worker_id": {
              "type": "string",
              "description": "Filter by specific worker ID",
              "example": "worker_3"
            },
            "queue_name": {
              "type": "string",
              "description": "Filter by queue name",
              "example": "high-priority"
            },
            "log_level": {
              "type": "array",
              "description": "Filter by log levels",
              "items": {
                "type": "string",
                "enum": ["trace", "debug", "info", "warn", "error", "fatal"]
              },
              "uniqueItems": true,
              "example": ["error", "warn"]
            },
            "service": {
              "type": "string",
              "description": "Filter by service name",
              "example": "queue-worker"
            },
            "component": {
              "type": "string",
              "description": "Filter by component name",
              "example": "job-processor"
            },
            "trace_id": {
              "type": "string",
              "pattern": "^[a-f0-9]{32}$",
              "description": "Filter by trace ID"
            },
            "since": {
              "type": "string",
              "format": "date-time",
              "description": "Start time for log filtering"
            },
            "until": {
              "type": "string",
              "format": "date-time",
              "description": "End time for log filtering"
            },
            "text_search": {
              "type": "string",
              "description": "Text search within log messages",
              "maxLength": 256
            },
            "regex_pattern": {
              "type": "string",
              "description": "Regular expression pattern for message filtering",
              "maxLength": 512
            }
          },
          "additionalProperties": false
        },
        "options": {
          "type": "object",
          "description": "Stream configuration options",
          "properties": {
            "follow": {
              "type": "boolean",
              "description": "Whether to follow new log entries",
              "default": true
            },
            "tail_lines": {
              "type": "integer",
              "description": "Number of historical lines to include",
              "minimum": 0,
              "maximum": 10000,
              "default": 100
            },
            "rate_limit": {
              "type": "integer",
              "description": "Maximum lines per second",
              "minimum": 1,
              "maximum": 10000,
              "default": 1000
            },
            "buffer_size": {
              "type": "integer",
              "description": "Buffer size for backpressure handling",
              "minimum": 1000,
              "maximum": 100000,
              "default": 10000
            },
            "format": {
              "type": "string",
              "enum": ["json", "plain", "structured"],
              "description": "Output format for log entries",
              "default": "json"
            },
            "include_source": {
              "type": "boolean",
              "description": "Include source location information",
              "default": true
            },
            "time_format": {
              "type": "string",
              "enum": ["iso8601", "rfc3339", "unix", "relative"],
              "description": "Timestamp format preference",
              "default": "iso8601"
            }
          },
          "additionalProperties": false
        },
        "status": {
          "type": "string",
          "enum": ["active", "paused", "rate_limited", "closed", "error"],
          "description": "Current stream status"
        },
        "stats": {
          "type": "object",
          "description": "Stream statistics and metrics",
          "properties": {
            "lines_streamed": {
              "type": "integer",
              "description": "Total lines sent to client",
              "minimum": 0
            },
            "lines_filtered": {
              "type": "integer",
              "description": "Total lines filtered out",
              "minimum": 0
            },
            "current_rate": {
              "type": "number",
              "description": "Current lines per second",
              "minimum": 0
            },
            "average_rate": {
              "type": "number",
              "description": "Average lines per second",
              "minimum": 0
            },
            "buffer_usage": {
              "type": "number",
              "description": "Buffer utilization percentage",
              "minimum": 0,
              "maximum": 1
            },
            "bytes_transmitted": {
              "type": "integer",
              "description": "Total bytes transmitted",
              "minimum": 0
            },
            "connection_time": {
              "type": "integer",
              "description": "Connection duration in seconds",
              "minimum": 0
            },
            "last_activity": {
              "type": "string",
              "format": "date-time",
              "description": "Timestamp of last activity"
            }
          },
          "additionalProperties": false
        },
        "websocket_url": {
          "type": "string",
          "format": "uri",
          "description": "WebSocket endpoint for the stream",
          "example": "ws://localhost:8080/api/v1/logs/streams/stream_001/ws"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Stream creation timestamp"
        },
        "expires_at": {
          "type": "string",
          "format": "date-time",
          "description": "Stream expiration timestamp"
        },
        "last_heartbeat": {
          "type": "string",
          "format": "date-time",
          "description": "Last client heartbeat"
        }
      },
      "required": ["stream_id", "filters", "status", "created_at"],
      "additionalProperties": false
    },

    "CorrelationIndex": {
      "type": "object",
      "title": "Correlation Index",
      "description": "Correlated trace and log data for a specific job",
      "properties": {
        "job_id": {
          "type": "string",
          "description": "Primary job identifier",
          "example": "job_12345"
        },
        "trace_contexts": {
          "type": "array",
          "description": "All trace contexts associated with the job",
          "items": {
            "$ref": "#/definitions/TraceContext"
          }
        },
        "log_entries": {
          "type": "array",
          "description": "All log entries associated with the job",
          "items": {
            "$ref": "#/definitions/LogEntry"
          }
        },
        "timeline": {
          "type": "array",
          "description": "Chronological timeline of events",
          "items": {
            "type": "object",
            "properties": {
              "timestamp": {
                "type": "string",
                "format": "date-time",
                "description": "Event timestamp"
              },
              "type": {
                "type": "string",
                "enum": ["span_start", "span_end", "log", "job_event", "error"],
                "description": "Type of timeline event"
              },
              "source": {
                "type": "string",
                "enum": ["trace", "log", "job"],
                "description": "Source of the event"
              },
              "data": {
                "type": "object",
                "description": "Event-specific data",
                "additionalProperties": true
              },
              "severity": {
                "type": "string",
                "enum": ["info", "warn", "error", "critical"],
                "description": "Event severity level"
              }
            },
            "required": ["timestamp", "type", "source"],
            "additionalProperties": false
          }
        },
        "relationships": {
          "type": "object",
          "description": "Relationships to other jobs and traces",
          "properties": {
            "parent_jobs": {
              "type": "array",
              "description": "Jobs that spawned this job",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            },
            "child_jobs": {
              "type": "array",
              "description": "Jobs spawned by this job",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            },
            "related_traces": {
              "type": "array",
              "description": "Other traces in the same operation",
              "items": {
                "type": "string",
                "pattern": "^[a-f0-9]{32}$"
              },
              "uniqueItems": true
            },
            "dependency_chain": {
              "type": "array",
              "description": "Dependency chain of related jobs",
              "items": {
                "type": "object",
                "properties": {
                  "job_id": {
                    "type": "string"
                  },
                  "relationship": {
                    "type": "string",
                    "enum": ["parent", "child", "sibling", "dependency"]
                  },
                  "trace_id": {
                    "type": "string",
                    "pattern": "^[a-f0-9]{32}$"
                  }
                },
                "required": ["job_id", "relationship"],
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "summary": {
          "type": "object",
          "description": "Summary statistics for the correlation",
          "properties": {
            "total_spans": {
              "type": "integer",
              "description": "Total number of spans",
              "minimum": 0
            },
            "total_logs": {
              "type": "integer",
              "description": "Total number of log entries",
              "minimum": 0
            },
            "error_count": {
              "type": "integer",
              "description": "Number of errors detected",
              "minimum": 0
            },
            "duration_ms": {
              "type": "integer",
              "description": "Total operation duration",
              "minimum": 0
            },
            "services_involved": {
              "type": "array",
              "description": "List of services involved",
              "items": {
                "type": "string"
              },
              "uniqueItems": true
            },
            "critical_path": {
              "type": "array",
              "description": "Critical path through the trace",
              "items": {
                "type": "string",
                "pattern": "^[a-f0-9]{16}$"
              }
            }
          },
          "additionalProperties": false
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "When correlation was created"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "When correlation was last updated"
        }
      },
      "required": ["job_id", "created_at"],
      "additionalProperties": false
    },

    "TracingConfig": {
      "type": "object",
      "title": "Tracing Configuration",
      "description": "Configuration for distributed tracing integration",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether tracing integration is enabled",
          "default": true
        },
        "backends": {
          "type": "array",
          "description": "Configured tracing backends",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Backend identifier",
                "minLength": 1,
                "maxLength": 64,
                "example": "jaeger-prod"
              },
              "type": {
                "type": "string",
                "enum": ["jaeger", "zipkin", "opentelemetry"],
                "description": "Backend type"
              },
              "endpoint": {
                "type": "string",
                "format": "uri",
                "description": "Backend API endpoint",
                "example": "http://jaeger:14268/api/traces"
              },
              "url_template": {
                "type": "string",
                "description": "Template for trace URLs",
                "example": "http://jaeger:16686/trace/{trace_id}"
              },
              "timeout_ms": {
                "type": "integer",
                "description": "Request timeout in milliseconds",
                "minimum": 100,
                "maximum": 30000,
                "default": 5000
              },
              "auth": {
                "type": "object",
                "description": "Authentication configuration",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["none", "basic", "bearer", "api_key"],
                    "default": "none"
                  },
                  "credentials": {
                    "type": "object",
                    "description": "Authentication credentials",
                    "properties": {
                      "username": {
                        "type": "string"
                      },
                      "password": {
                        "type": "string"
                      },
                      "token": {
                        "type": "string"
                      },
                      "api_key": {
                        "type": "string"
                      },
                      "header_name": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "enabled": {
                "type": "boolean",
                "description": "Whether this backend is enabled",
                "default": true
              },
              "priority": {
                "type": "integer",
                "description": "Backend priority (lower is higher priority)",
                "minimum": 0,
                "default": 0
              }
            },
            "required": ["name", "type", "endpoint"],
            "additionalProperties": false
          }
        },
        "extraction": {
          "type": "object",
          "description": "Trace context extraction configuration",
          "properties": {
            "headers": {
              "type": "array",
              "description": "HTTP headers to check for trace IDs",
              "items": {
                "type": "string"
              },
              "default": ["X-Trace-Id", "X-B3-TraceId", "traceparent"],
              "example": ["X-Trace-Id", "X-B3-TraceId"]
            },
            "payload_fields": {
              "type": "array",
              "description": "JSON payload fields to check for trace IDs",
              "items": {
                "type": "string"
              },
              "default": ["trace_id", "tracing.trace_id"],
              "example": ["trace_id", "tracing.trace_id"]
            },
            "metadata_keys": {
              "type": "array",
              "description": "Job metadata keys to check for trace IDs",
              "items": {
                "type": "string"
              },
              "default": ["trace_id", "trace_context"]
            },
            "format_validation": {
              "type": "boolean",
              "description": "Whether to validate trace ID format",
              "default": true
            }
          },
          "additionalProperties": false
        },
        "sample_rate": {
          "type": "number",
          "description": "Sampling rate for trace extraction",
          "minimum": 0,
          "maximum": 1,
          "default": 0.1
        },
        "cache": {
          "type": "object",
          "description": "Trace data caching configuration",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": true
            },
            "ttl_minutes": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1440,
              "default": 60
            },
            "max_size_mb": {
              "type": "integer",
              "minimum": 10,
              "maximum": 1000,
              "default": 100
            }
          },
          "additionalProperties": false
        }
      },
      "required": ["enabled"],
      "additionalProperties": false
    },

    "LoggingConfig": {
      "type": "object",
      "title": "Logging Configuration",
      "description": "Configuration for log streaming and aggregation",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether log streaming is enabled",
          "default": true
        },
        "sources": {
          "type": "array",
          "description": "Configured log sources",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Source identifier",
                "minLength": 1,
                "maxLength": 64
              },
              "type": {
                "type": "string",
                "enum": ["docker", "file", "syslog", "journald", "http", "kafka"],
                "description": "Log source type"
              },
              "endpoint": {
                "type": "string",
                "description": "Source endpoint or path",
                "example": "unix:///var/run/docker.sock"
              },
              "filters": {
                "type": "array",
                "description": "Container or service filters",
                "items": {
                  "type": "string"
                },
                "example": ["queue-worker", "redis"]
              },
              "format": {
                "type": "string",
                "enum": ["json", "plain", "syslog", "nginx", "apache"],
                "description": "Log format",
                "default": "json"
              },
              "enabled": {
                "type": "boolean",
                "default": true
              },
              "batch_size": {
                "type": "integer",
                "minimum": 1,
                "maximum": 1000,
                "default": 100
              },
              "flush_interval_ms": {
                "type": "integer",
                "minimum": 100,
                "maximum": 10000,
                "default": 1000
              }
            },
            "required": ["name", "type"],
            "additionalProperties": false
          }
        },
        "rate_limiting": {
          "type": "object",
          "description": "Rate limiting configuration",
          "properties": {
            "max_lines_per_second": {
              "type": "integer",
              "description": "Global rate limit",
              "minimum": 1,
              "maximum": 100000,
              "default": 1000
            },
            "burst_limit": {
              "type": "integer",
              "description": "Burst allowance",
              "minimum": 1,
              "maximum": 100000,
              "default": 5000
            },
            "per_user_limit": {
              "type": "integer",
              "description": "Per-user rate limit",
              "minimum": 1,
              "maximum": 10000,
              "default": 100
            },
            "backoff_strategy": {
              "type": "string",
              "enum": ["linear", "exponential", "fixed"],
              "description": "Backoff strategy when rate limited",
              "default": "exponential"
            },
            "backoff_base_ms": {
              "type": "integer",
              "minimum": 100,
              "maximum": 10000,
              "default": 1000
            }
          },
          "additionalProperties": false
        },
        "retention": {
          "type": "object",
          "description": "Log retention configuration",
          "properties": {
            "buffer_size": {
              "type": "integer",
              "description": "In-memory buffer size",
              "minimum": 1000,
              "maximum": 1000000,
              "default": 100000
            },
            "max_age_minutes": {
              "type": "integer",
              "description": "Maximum age for buffered logs",
              "minimum": 1,
              "maximum": 10080,
              "default": 60
            },
            "max_size_mb": {
              "type": "integer",
              "description": "Maximum buffer size in MB",
              "minimum": 1,
              "maximum": 1000,
              "default": 100
            },
            "cleanup_interval_minutes": {
              "type": "integer",
              "minimum": 1,
              "maximum": 60,
              "default": 5
            }
          },
          "additionalProperties": false
        },
        "redaction": {
          "type": "object",
          "description": "PII redaction configuration",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": true
            },
            "patterns": {
              "type": "array",
              "description": "Regex patterns for sensitive data",
              "items": {
                "type": "string"
              },
              "default": [
                "(?i)(password|pwd|secret|token|key|auth)\\s*[:=]\\s*[\"']?([^\\s\"']+)",
                "\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b",
                "\\b(?:\\d{4}[-\\s]?){3}\\d{4}\\b"
              ]
            },
            "replacement": {
              "type": "string",
              "description": "Replacement text for redacted data",
              "default": "[REDACTED]"
            },
            "field_whitelist": {
              "type": "array",
              "description": "Fields to never redact",
              "items": {
                "type": "string"
              },
              "default": ["timestamp", "level", "service", "component"]
            }
          },
          "additionalProperties": false
        },
        "websocket": {
          "type": "object",
          "description": "WebSocket configuration",
          "properties": {
            "max_connections": {
              "type": "integer",
              "minimum": 1,
              "maximum": 10000,
              "default": 1000
            },
            "max_connections_per_user": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            },
            "ping_interval_seconds": {
              "type": "integer",
              "minimum": 10,
              "maximum": 300,
              "default": 30
            },
            "write_timeout_seconds": {
              "type": "integer",
              "minimum": 1,
              "maximum": 60,
              "default": 10
            },
            "read_timeout_seconds": {
              "type": "integer",
              "minimum": 1,
              "maximum": 300,
              "default": 60
            }
          },
          "additionalProperties": false
        }
      },
      "required": ["enabled"],
      "additionalProperties": false
    },

    "Error": {
      "type": "object",
      "title": "Error Response",
      "description": "Standard error response format",
      "properties": {
        "error": {
          "type": "string",
          "description": "Human-readable error message",
          "minLength": 1
        },
        "code": {
          "type": "string",
          "description": "Machine-readable error code",
          "pattern": "^[A-Z_]+$",
          "example": "TRACE_NOT_FOUND"
        },
        "details": {
          "type": "object",
          "description": "Additional error context",
          "additionalProperties": true
        },
        "trace_id": {
          "type": "string",
          "description": "Request trace ID for debugging",
          "pattern": "^[a-f0-9]{32}$"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Error timestamp"
        },
        "path": {
          "type": "string",
          "description": "API path where error occurred"
        },
        "method": {
          "type": "string",
          "description": "HTTP method"
        }
      },
      "required": ["error"],
      "additionalProperties": false
    }
  }
}
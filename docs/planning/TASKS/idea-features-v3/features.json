{
  "meta": {
    "generated_at": "2025-09-14T16:49:01.339243Z",
    "version": "3.0",
    "feature_count": 37
  },
  "features": [
    {
      "id": "F001",
      "title": "Admin Api",
      "description": "Define a versioned, secure Admin API (HTTP/gRPC) that fronts existing admin functions, enabling TUI/web/automation with RBAC and observability.\n\n> [!note]- **\ud83d\udde3\ufe0f CLAUDE'S THOUGHTS \ud83d\udcad**\n> Smart foundatio",
      "priority": "critical",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/admin-api.md",
          "excerpt": "Create a stable contract for admin operations, allow remote control, and unlock future UI features while enforcing safety and auditability.",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F002",
      "title": "Multi Cluster Control",
      "description": "Manage multiple Redis clusters from a single TUI: quick switch tabs, side\u2011by\u2011side compare, and optionally propagate admin actions across clusters with confirmations.\n\n> [!note]- **\ud83d\udde3\ufe0f CLAUDE'S THOUGHTS",
      "priority": "high",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/multi-cluster-control.md",
          "excerpt": "- Reduce context switching between environments.\n- Detect configuration or behavior drift quickly.\n- Execute coordinated admin operations (e.g., purge",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F003",
      "title": "Visual Dag Builder",
      "description": "Design and ship a terminal-native visual builder for multi-step workflows. Users assemble stages with dependencies, retries, and compensations, then submit the DAG as a reusable pipeline. This turns t",
      "priority": "high",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/visual-dag-builder.md",
          "excerpt": "- Express end-to-end business processes as composable pipelines.\n- Improve reliability with built-in retries/compensations.\n- Enable reuse: versioned ",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F004",
      "title": "Distributed Tracing Integration",
      "description": "Make tracing first\u2011class with OpenTelemetry: automatically create spans for enqueue, dequeue, and job processing, propagate context through job payloads/metadata, and link to external tracing backends",
      "priority": "critical",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/distributed-tracing-integration.md",
          "excerpt": "- Correlate queue activity with upstream/downstream services for faster RCA.\n- Provide visibility into per\u2011job timing (queueing, processing) and failu",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F005",
      "title": "Plugin Panel System",
      "description": "A terminal\u2011native plugin framework that lets teams drop in custom panels for org\u2011specific metrics, transforms, and actions. Plugins render inside the TUI, receive typed events (stats, selection, timer",
      "priority": "low",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/plugin-panel-system.md",
          "excerpt": "- Organizations need bespoke dashboards and actions (tenant stats, SLA widgets, proprietary transforms).\n- Avoid hard\u2011coding one\u2011off features into cor",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F006",
      "title": "Time Travel Debugger",
      "description": "A revolutionary debugging tool that captures job execution history and allows developers to replay, step through, and analyze past job runs in the TUI. Navigate through time to see exact states, varia",
      "priority": "low",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/time-travel-debugger.md",
          "excerpt": "- Eliminate \"works on my machine\" by replaying exact production scenarios\n- Debug intermittent failures that can't be reproduced\n- Understand complex ",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F007",
      "title": "Exactly Once Patterns",
      "description": "Document and optionally enforce patterns for effectively exactly\u2011once processing: idempotency keys, deduplication sets, and the transactional outbox. Provide helpers and guardrails so teams can adopt ",
      "priority": "critical",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/exactly-once-patterns.md",
          "excerpt": "- Reduce duplicate side effects and simplify consumer code.\n- Align with best practices without forcing heavy frameworks.\n- Improve reliability in dis",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F008",
      "title": "Rbac And Tokens",
      "description": "Introduce role\u2011based access control and signed tokens over the Admin API. Scope access by action and resource, enforce deny\u2011by\u2011default, and maintain an auditable trail of destructive operations.\n\n> [!",
      "priority": "critical",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/rbac-and-tokens.md",
          "excerpt": "- Meet production security expectations (least privilege, auditability, rotation).\n- Safely expose remote control to teams and automation.\n- Enable fu",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F009",
      "title": "Chaos Harness",
      "description": "Inject controlled failures (latency, drops, Redis failovers) to test resilience and visualize recovery in the TUI. Automate soak and chaos scenarios with guardrails.\n\n> [!note]- **\ud83d\udde3\ufe0f CLAUDE'S THOUGHTS",
      "priority": "low",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/chaos-harness.md",
          "excerpt": "- Validate that retries, DLQ, and backpressure behave under stress.\n- Build confidence in failover paths and SLO budgets.\n- Catch regressions before t",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F010",
      "title": "Anomaly Radar Slo Budget",
      "description": "A compact widget showing backlog growth, error rate, and p95 with SLO budget and burn alerts.\n\n> [!note]- **\ud83d\udde3\ufe0f CLAUDE'S THOUGHTS \ud83d\udcad**\n> SRE candy! This is Google SRE book meets terminal aesthetics. Err",
      "priority": "low",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/anomaly-radar-slo-budget.md",
          "excerpt": "Provide immediate health signals and guide operational action.",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F011",
      "title": "Automatic Capacity Planning",
      "description": "Predict and set recommended worker counts to meet SLOs based on historical arrival/service rates. Generate actionable plans (or auto\u2011apply via Operator) with safety bands, cool\u2011downs, and what\u2011if simu",
      "priority": "low",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/automatic-capacity-planning.md",
          "excerpt": "- Eliminate manual guesswork in scaling worker fleets.\n- Maintain SLOs efficiently by matching capacity to demand.\n- Reduce cost while avoiding backlo",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F012",
      "title": "Kubernetes Operator",
      "description": "Ship a Kubernetes Operator with CRDs to declaratively manage queues and workers. Reconcile desired state (workers, rate limits, DLQ policies) from YAML, autoscale by backlog/SLA targets, and support s",
      "priority": "low",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/kubernetes-operator.md",
          "excerpt": "- GitOps\u2011friendly operations for the queue stack.\n- Autoscale workers based on backlog growth and latency SLOs.\n- Consistent, reviewed changes across ",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F013",
      "title": "Canary Deployments",
      "description": "Safely roll out new worker versions by routing a configurable percentage of jobs to canaries, compare key SLOs, and promote or roll back quickly. Support sticky routing and per\u2011queue/tenant canaries.\n",
      "priority": "medium",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/canary-deployments.md",
          "excerpt": "- Reduce risk of deploys by validating in production with guardrails.\n- Catch regressions in latency/failures early and roll back rapidly.\n- Enable pr",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F014",
      "title": "Event Hooks",
      "description": "Emit events for job lifecycle changes (enqueued, started, succeeded, failed, DLQ) to external systems via webhooks or NATS. Signed payloads, backoff retries, and per\u2011queue filters provide safe, flexib",
      "priority": "high",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/event-hooks.md",
          "excerpt": "- Automate workflows: notify services, trigger pipelines, or update dashboards on state changes.\n- Reduce polling and bespoke glue code.\n- Provide aud",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F015",
      "title": "Smart Payload Deduplication",
      "description": "Intelligent deduplication system that detects similar job payloads and stores them once, dramatically reducing Redis memory usage. Uses content-addressable storage with smart chunking to find commonal",
      "priority": "medium",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/smart-payload-deduplication.md",
          "excerpt": "- Reduce Redis memory usage by 50-90% for repetitive workloads\n- Enable longer job history retention within same memory budget\n- Detect and consolidat",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F016",
      "title": "Job Budgeting",
      "description": "Track and allocate cost per job/tenant using measured resource usage and a simple cost model. Define monthly budgets, show spend vs. budget, forecast burn, and apply optional enforcement (soft warning",
      "priority": "medium",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/job-budgeting.md",
          "excerpt": "- Bring financial accountability to shared queues.\n- Prevent runaway costs from poorly behaving producers.\n- Enable chargeback/showback and informed p",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F017",
      "title": "Job Genealogy Navigator",
      "description": "Interactive visualization of job family trees showing parent-child relationships, retry chains, spawned subjobs, and failure cascades. Navigate complex job genealogies in the TUI to understand causali",
      "priority": "low",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/job-genealogy-navigator.md",
          "excerpt": "- Understand cascade effects when parent jobs fail\n- Trace root causes through retry and respawn chains\n- Visualize workflow dependencies without exte",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F018",
      "title": "Long Term Archives",
      "description": "Stream completed jobs and key metadata to long\u2011term storage (ClickHouse or S3/Parquet) with retention controls. Provide fast querying for forensics and reporting while keeping Redis slim.\n\n> [!note]- ",
      "priority": "medium",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/long-term-archives.md",
          "excerpt": "- Investigate historical incidents and trends without bloating Redis.\n- Power analytics and reporting pipelines.\n- Meet compliance for retention or de",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F019",
      "title": "Forecasting",
      "description": "Predict backlog, throughput, and error trends using simple time\u2011series models (moving averages, Holt\u2011Winters, optional ARIMA) to recommend scaling actions and SLO adjustments.\n\n> [!note]- **\ud83d\udde3\ufe0f CLAUDE'",
      "priority": "low",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/forecasting.md",
          "excerpt": "- Plan capacity and avoid surprise backlogs.\n- Inform autoscaling targets and maintenance windows.\n- Provide early warning on budget burn.",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F020",
      "title": "Multi Tenant Isolation",
      "description": "Introduce first\u2011class tenant boundaries: per\u2011tenant queues/keys, quotas, rate limits, encryption\u2011at\u2011rest for payloads, and audit trails. Enable safe multi\u2011tenant deployments with predictable isolation",
      "priority": "high",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/multi-tenant-isolation.md",
          "excerpt": "- Serve multiple teams/customers safely on shared infra.\n- Enforce fairness and budgets per tenant; prevent noisy neighbors.\n- Satisfy security/compli",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F021",
      "title": "Producer Backpressure",
      "description": "Provide producers with real\u2011time backpressure signals and helpers to adapt enqueue rate when queues are saturated. Offer SDK shims that expose `SuggestThrottle()` and circuit breaking by priority.\n\n> ",
      "priority": "medium",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/producer-backpressure.md",
          "excerpt": "- Prevent runaway enqueue that overwhelms workers and downstream systems.\n- Encourage smooth traffic shaping without bespoke logic in every producer.\n",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F022",
      "title": "Queue Snapshot Testing",
      "description": "Capture complete queue states as snapshots for regression testing, allowing teams to save, version, and replay complex queue scenarios. Compare actual vs. expected states with smart diffing that ignor",
      "priority": "low",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/queue-snapshot-testing.md",
          "excerpt": "- Catch queue behavior regressions before production\n- Test complex scenarios without manual setup\n- Document expected behavior through snapshot examp",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F023",
      "title": "Smart Retry Strategies",
      "description": "Adapt retry timing and policy based on historical success patterns. Start with robust heuristics and a Bayesian layer, optionally evolve to ML\u2011based recommendations. Bound decisions with guardrails an",
      "priority": "high",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/smart-retry-strategies.md",
          "excerpt": "- Reduce wasted retries and downstream load during outages.\n- Improve success rate by aligning attempts with recovery windows.\n- Encode organizational",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F024",
      "title": "Storage Backends",
      "description": "Abstract storage to support multiple engines: Redis Lists (current), Redis Streams, and optionally KeyDB/Dragonfly and Redis Cluster. Provide a pluggable interface and a Kafka outbox bridge for intero",
      "priority": "high",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/storage-backends.md",
          "excerpt": "- Fit diverse environments and operational preferences.\n- Unlock features like replay (Streams) and better sharding (Cluster).\n- Enable hybrid designs",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F025",
      "title": "Terminal Voice Commands",
      "description": "Hands-free queue management through natural language voice commands. Speak to your terminal to perform operations, get status updates, and navigate the TUI\u2014improving accessibility and enabling multita",
      "priority": "low",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/terminal-voice-commands.md",
          "excerpt": "- Accessibility for users with mobility impairments\n- Hands-free operation during incidents\n- Faster command execution for power users\n- Natural langu",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F026",
      "title": "Theme Playground",
      "description": "A centralized theme system with dark/light and high\u2011contrast palettes, plus a playground to preview and switch themes live. Persist preferences, expose a few tunables (accent, contrast), and ensure ac",
      "priority": "low",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/theme-playground.md",
          "excerpt": "- Improve readability across terminals and environments.\n- Provide accessible options (high\u2011contrast) without forking styles per component.\n- Make dem",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F027",
      "title": "Trace Drilldown Log Tail",
      "description": "Surface trace IDs in the TUI and provide a log tail pane with filters to accelerate RCA.\n\n> [!note]- **\ud83d\udde3\ufe0f CLAUDE'S THOUGHTS \ud83d\udcad**\n> Observability nirvana! Going from \"job failed\" to root cause in second",
      "priority": "low",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/trace-drilldown-log-tail.md",
          "excerpt": "Tighten the feedback loop from failing jobs to actionable traces/logs.",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F028",
      "title": "Dlq Remediation Ui",
      "description": "A focused DLQ tab to list, search, peek, requeue, and purge items safely with confirmations.\n\n> [!note]- **\ud83d\udde3\ufe0f CLAUDE'S THOUGHTS \ud83d\udcad**\n> THIS is what separates toy queues from production queues. Every on",
      "priority": "medium",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/dlq-remediation-ui.md",
          "excerpt": "Reduce incident toil; provide a fast remediation loop within the TUI.",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F029",
      "title": "Dlq Remediation Pipeline",
      "description": "Automate DLQ cleanup with a configurable pipeline: classify failures, apply rules (transform, redact, reroute), and requeue with safe limits. Provide dry\u2011run, audit, and guardrails to reduce incident ",
      "priority": "medium",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/dlq-remediation-pipeline.md",
          "excerpt": "- Shrink time from failure to recovery by automating common remediation patterns.\n- Reduce manual, error\u2011prone DLQ archaeology.\n- Capture organization",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F030",
      "title": "Patterned Load Generator",
      "description": "Extend the bench tool to support sine/burst/ramp patterns, with guardrails and live visualization.\n\n> [!note]- **\ud83d\udde3\ufe0f CLAUDE'S THOUGHTS \ud83d\udcad**\n> Smart evolution of your existing bench tool! Sine waves for ",
      "priority": "low",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/patterned-load-generator.md",
          "excerpt": "Validate behavior under realistic traffic and create great demos.",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F031",
      "title": "Policy Simulator",
      "description": "A \"what\u2011if\" simulator to preview the impact of policy changes (retry/backoff, rate limits, concurrency) before applying.\n\n> [!note]- **\ud83d\udde3\ufe0f CLAUDE'S THOUGHTS \ud83d\udcad**\n> Ambitious! This is chaos engineering m",
      "priority": "low",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/policy-simulator.md",
          "excerpt": "Prevent outages and tune SLOs by testing changes safely.",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F032",
      "title": "Advanced Rate Limiting",
      "description": "Implement token\u2011bucket rate limiting with priority fairness and per\u2011tenant budgets. Support global and per\u2011queue/per\u2011tenant limits, dynamic tuning, and clear visibility into allowance and throttling.\n",
      "priority": "medium",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/advanced-rate-limiting.md",
          "excerpt": "- Protect downstreams and shared infrastructure with hard, fair caps.\n- Provide predictable throughput for premium or critical tenants.\n- Avoid bursty",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F033",
      "title": "Calendar View",
      "description": "A calendar UI to visualize scheduled and recurring jobs by day/week/month. Users can navigate time ranges, inspect details, reschedule, or pause rules\u2014without leaving the TUI.\n\n> [!note]- **\ud83d\udde3\ufe0f CLAUDE'",
      "priority": "low",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/calendar-view.md",
          "excerpt": "- Make time a first\u2011class dimension: see spikes, gaps, and overlaps at a glance.\n- Reduce mistakes when backfilling or coordinating large scheduled ru",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F034",
      "title": "Collaborative Session",
      "description": "Share a read\u2011only live TUI session over the network. A presenter can invite observers to follow along; optionally hand control with a key press. Perfect for incident reviews, pairing, and demos\u2014withou",
      "priority": "low",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/collaborative-session.md",
          "excerpt": "- Reduce friction in incident response and walkthroughs.\n- Preserve crisp terminal rendering and low bandwidth vs. video calls.\n- Build trust: observe",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F035",
      "title": "Json Payload Studio",
      "description": "An in\u2011TUI JSON editor to author, validate, and enqueue job payloads. Includes templates, snippets, schema validation, scheduling (run\u2011at/cron), and pretty diff/peek integration for rapid iteration.\n\n>",
      "priority": "low",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/json-payload-studio.md",
          "excerpt": "- Speed up development and debugging by removing context switches to external editors and scripts.\n- Promote consistent payloads with reusable templat",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F036",
      "title": "Worker Fleet Controls",
      "description": "Operate the worker fleet from the TUI: pause/resume/drain nodes, rolling restarts, and live worker summaries (ID, last heartbeat, active job). Provide precise controls with confirmations and safeguard",
      "priority": "medium",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/worker-fleet-controls.md",
          "excerpt": "- Reduce toil during deploys and incidents; replace ad\u2011hoc scripts.\n- Provide visibility into active work and worker health.\n- Enable safe, reversible",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    },
    {
      "id": "F037",
      "title": "Right Click Context Menus",
      "description": "Add contextual menus on right\u2011click (and `m`) across the TUI to expose actions where users are looking: peek, requeue, purge (confirmed), copy payload/key, open trace, export sample. Menus appear adja",
      "priority": "low",
      "source_evidence": [
        {
          "type": "plan",
          "source": "docs/ideas/right-click-context-menus.md",
          "excerpt": "- Speed common actions and reduce cognitive load.\n- Surface advanced operations without cluttering primary views.\n- Improve mouse UX to match keyboard",
          "confidence": 1.0,
          "rationale": "Primary specification document"
        }
      ]
    }
  ]
}
openapi: 3.0.3
info:
  title: Job Genealogy Navigator API
  description: |
    API for managing and visualizing job family trees, relationships, and genealogical analysis
    in distributed job processing systems. Provides comprehensive tools for understanding
    causality, tracing failures, and analyzing job spawn patterns.

    ## Features
    - Interactive job genealogy tree construction and visualization
    - Relationship tracking with multiple relationship types (retry, spawn, fork, etc.)
    - Root cause analysis through blame mode tracing
    - Impact analysis for understanding cascade effects
    - Pattern detection for identifying recurring genealogical structures
    - Performance-optimized graph operations with caching
    - ASCII art tree rendering with multiple layout algorithms

    ## Relationship Types
    - `retry` - Job retry with same payload
    - `spawn` - Child job spawned during processing
    - `fork` - Parallel processing split
    - `callback` - Callback triggered by completion
    - `compensation` - Cleanup/rollback job
    - `continuation` - Sequential workflow step
    - `batch_member` - Part of batch operation
    - `dependency` - Dependency relationship

    ## Authentication
    All endpoints require JWT authentication with appropriate role-based permissions:
    - `genealogy:viewer` - Read-only tree navigation and viewing
    - `genealogy:analyst` - Full analysis capabilities including blame and impact
    - `genealogy:admin` - Administrative functions and relationship management
  version: 1.0.0
  contact:
    name: Engineering Team
    email: engineering@company.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080
    description: Development server
  - url: https://api.workqueue.company.com
    description: Production server

security:
  - BearerAuth: []

paths:
  /genealogy/tree/{jobId}:
    get:
      summary: Get job genealogy tree
      description: |
        Retrieve the complete family tree for a job, including ancestors and descendants.
        Supports different tree scopes and layout options for visualization.
      operationId: getJobGenealogy
      tags:
        - Tree Visualization
      parameters:
        - name: jobId
          in: path
          required: true
          description: Job ID to build genealogy tree for
          schema:
            type: string
            example: "job-12345"
        - name: scope
          in: query
          description: Tree scope to retrieve
          schema:
            type: string
            enum: [full, ancestors, descendants, blame, impact]
            default: full
        - name: max_depth
          in: query
          description: Maximum tree depth to retrieve
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
        - name: layout
          in: query
          description: Layout algorithm for tree positioning
          schema:
            type: string
            enum: [top_down, timeline, radial, compact]
            default: top_down
        - name: include_collapsed
          in: query
          description: Include collapsed node information
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Job genealogy tree retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobGenealogy'
              example:
                root_id: "job-001"
                query_job_id: "job-12345"
                tree_scope: "full"
                total_nodes: 7
                max_depth: 3
                nodes:
                  - job_id: "job-001"
                    job_type: "user_signup"
                    status: "success"
                    generation: 0
                    display_name: "user_signup"
                    status_emoji: "âœ…"
                edges:
                  - from_job_id: "job-001"
                    to_job_id: "job-002"
                    relationship:
                      type: "spawn"
                      spawn_reason: "send_welcome_email"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Job not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalError'

  /genealogy/relationships:
    get:
      summary: Get job relationships
      description: Retrieve relationship data between jobs with filtering and pagination
      operationId: getJobRelationships
      tags:
        - Relationships
      parameters:
        - name: parent_id
          in: query
          description: Filter by parent job ID
          schema:
            type: string
        - name: child_id
          in: query
          description: Filter by child job ID
          schema:
            type: string
        - name: relationship_type
          in: query
          description: Filter by relationship type
          schema:
            type: string
            enum: [retry, spawn, fork, callback, compensation, continuation, batch_member, dependency]
        - name: start_time
          in: query
          description: Filter relationships created after this time
          schema:
            type: string
            format: date-time
        - name: end_time
          in: query
          description: Filter relationships created before this time
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          description: Maximum number of relationships to return
          schema:
            type: integer
            minimum: 1
            maximum: 10000
            default: 1000
        - name: offset
          in: query
          description: Number of relationships to skip
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Job relationships retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  relationships:
                    type: array
                    items:
                      $ref: '#/components/schemas/JobRelationship'
                  total:
                    type: integer
                    description: Total number of relationships matching criteria
                  pagination:
                    $ref: '#/components/schemas/PaginationInfo'

    post:
      summary: Create job relationship
      description: Create a new relationship between two jobs
      operationId: createJobRelationship
      tags:
        - Relationships
      security:
        - BearerAuth: [genealogy:admin]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRelationshipRequest'
            example:
              parent_id: "job-001"
              child_id: "job-002"
              type: "spawn"
              spawn_reason: "user_notification"
              processing_context:
                attempt: 1
                max_retries: 3
      responses:
        '201':
          description: Relationship created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRelationship'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          description: Relationship already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /genealogy/relationships/{parentId}/{childId}:
    get:
      summary: Get specific job relationship
      description: Retrieve details of a specific relationship between two jobs
      operationId: getJobRelationship
      tags:
        - Relationships
      parameters:
        - name: parentId
          in: path
          required: true
          description: Parent job ID
          schema:
            type: string
        - name: childId
          in: path
          required: true
          description: Child job ID
          schema:
            type: string
      responses:
        '200':
          description: Relationship retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobRelationship'
        '404':
          description: Relationship not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Delete job relationship
      description: Remove a relationship between two jobs
      operationId: deleteJobRelationship
      tags:
        - Relationships
      security:
        - BearerAuth: [genealogy:admin]
      parameters:
        - name: parentId
          in: path
          required: true
          description: Parent job ID
          schema:
            type: string
        - name: childId
          in: path
          required: true
          description: Child job ID
          schema:
            type: string
      responses:
        '204':
          description: Relationship deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Relationship not found

  /genealogy/blame/{jobId}:
    get:
      summary: Trace blame path for failed job
      description: |
        Perform blame analysis to trace a failed job back to its root cause.
        Returns the complete path from the failed job to the original cause.
      operationId: traceJobBlamePath
      tags:
        - Analysis
      security:
        - BearerAuth: [genealogy:analyst]
      parameters:
        - name: jobId
          in: path
          required: true
          description: Failed job ID to trace
          schema:
            type: string
        - name: max_depth
          in: query
          description: Maximum depth to trace back
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
      responses:
        '200':
          description: Blame path traced successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlameAnalysis'
              example:
                source_job_id: "job-failed-001"
                blame_path:
                  - "job-failed-001"
                  - "job-parent-001"
                  - "job-root-001"
                root_cause_job_id: "job-root-001"
                root_cause_reason: "Database connection timeout"
                failure_cascade_count: 5
                analysis_confidence: 0.95
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Job not found or not failed

  /genealogy/impact/{jobId}:
    get:
      summary: Calculate impact radius for job
      description: |
        Analyze the impact radius of a job by calculating all affected descendants
        and their processing costs, durations, and failure rates.
      operationId: calculateJobImpact
      tags:
        - Analysis
      security:
        - BearerAuth: [genealogy:analyst]
      parameters:
        - name: jobId
          in: path
          required: true
          description: Job ID to analyze impact for
          schema:
            type: string
        - name: include_costs
          in: query
          description: Include cost analysis in response
          schema:
            type: boolean
            default: true
        - name: time_window
          in: query
          description: Time window for impact analysis
          schema:
            type: string
            enum: [1h, 6h, 24h, 7d, 30d]
            default: 24h
      responses:
        '200':
          description: Impact analysis completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImpactAnalysis'
              example:
                source_job_id: "job-001"
                direct_children: 3
                total_descendants: 15
                successful_jobs: 12
                failed_jobs: 3
                total_processing_time: "45m30s"
                estimated_cost: 12.50
                impact_time_span: "2h15m"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /genealogy/patterns:
    get:
      summary: Get detected genealogy patterns
      description: |
        Retrieve patterns detected in job genealogies, including recurring failure
        structures, unusual spawn patterns, and performance anomalies.
      operationId: getGenealogyPatterns
      tags:
        - Patterns
      parameters:
        - name: pattern_type
          in: query
          description: Filter by pattern type
          schema:
            type: string
            enum: [retry_chain, failure_fan, deep_nesting, wide_spread, cycle, anomaly]
        - name: min_frequency
          in: query
          description: Minimum pattern frequency to include
          schema:
            type: integer
            minimum: 1
            default: 2
        - name: time_range
          in: query
          description: Time range for pattern detection
          schema:
            type: string
            enum: [1h, 6h, 24h, 7d, 30d]
            default: 7d
        - name: confidence_threshold
          in: query
          description: Minimum confidence threshold
          schema:
            type: number
            minimum: 0.0
            maximum: 1.0
            default: 0.7
      responses:
        '200':
          description: Patterns retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  patterns:
                    type: array
                    items:
                      $ref: '#/components/schemas/GenealogyPattern'
                  detection_metadata:
                    $ref: '#/components/schemas/PatternDetectionMetadata'

  /genealogy/patterns/{patternId}:
    get:
      summary: Get specific genealogy pattern
      description: Retrieve detailed information about a specific detected pattern
      operationId: getGenealogyPattern
      tags:
        - Patterns
      parameters:
        - name: patternId
          in: path
          required: true
          description: Pattern identifier
          schema:
            type: string
      responses:
        '200':
          description: Pattern retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenealogyPattern'
        '404':
          description: Pattern not found

  /genealogy/search:
    get:
      summary: Search genealogy trees
      description: |
        Search across genealogy trees using various criteria including job types,
        statuses, relationships, and custom metadata.
      operationId: searchGenealogies
      tags:
        - Search
      parameters:
        - name: query
          in: query
          required: true
          description: Search query string
          schema:
            type: string
            example: "job_type:user_signup AND status:failed"
        - name: scope
          in: query
          description: Search scope
          schema:
            type: string
            enum: [jobs, relationships, patterns, trees]
            default: jobs
        - name: time_range
          in: query
          description: Time range for search
          schema:
            type: string
            enum: [1h, 6h, 24h, 7d, 30d]
            default: 24h
        - name: limit
          in: query
          description: Maximum number of results
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
        - name: offset
          in: query
          description: Number of results to skip
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Search completed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/SearchResult'
                  total:
                    type: integer
                  pagination:
                    $ref: '#/components/schemas/PaginationInfo'
                  search_metadata:
                    $ref: '#/components/schemas/SearchMetadata'

  /genealogy/export/{jobId}:
    get:
      summary: Export genealogy tree
      description: |
        Export job genealogy tree in various formats for external visualization
        and analysis tools.
      operationId: exportGenealogyTree
      tags:
        - Export
      parameters:
        - name: jobId
          in: path
          required: true
          description: Root job ID for export
          schema:
            type: string
        - name: format
          in: query
          required: true
          description: Export format
          schema:
            type: string
            enum: [json, dot, mermaid, csv, ascii]
        - name: scope
          in: query
          description: Tree scope to export
          schema:
            type: string
            enum: [full, ancestors, descendants]
            default: full
        - name: include_metadata
          in: query
          description: Include job metadata in export
          schema:
            type: boolean
            default: true
        - name: compress
          in: query
          description: Compress export data
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Tree exported successfully
          content:
            application/json:
              schema:
                type: object
            text/plain:
              schema:
                type: string
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: Job not found

  /genealogy/stats:
    get:
      summary: Get genealogy statistics
      description: |
        Retrieve system-wide statistics about job genealogies including
        tree sizes, relationship distributions, and performance metrics.
      operationId: getGenealogyStats
      tags:
        - Statistics
      parameters:
        - name: time_range
          in: query
          description: Time range for statistics
          schema:
            type: string
            enum: [1h, 6h, 24h, 7d, 30d]
            default: 24h
        - name: include_histograms
          in: query
          description: Include histogram data
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Statistics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenealogyStatistics'

  /genealogy/health:
    get:
      summary: Get genealogy system health
      description: Health check endpoint for genealogy navigation system
      operationId: getGenealogyHealth
      tags:
        - System
      responses:
        '200':
          description: System is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'
              example:
                status: "healthy"
                uptime: "72h15m"
                cache_hit_rate: 0.85
                avg_tree_build_time: "45ms"
                relationships_tracked: 150420
        '503':
          description: System is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'

  /genealogy/cache/clear:
    post:
      summary: Clear genealogy cache
      description: Clear cached genealogy trees and force rebuild on next access
      operationId: clearGenealogyCache
      tags:
        - Cache Management
      security:
        - BearerAuth: [genealogy:admin]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                scope:
                  type: string
                  enum: [all, trees, relationships, patterns]
                  default: all
                job_ids:
                  type: array
                  items:
                    type: string
                  description: Specific job IDs to clear (optional)
      responses:
        '200':
          description: Cache cleared successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  cleared_entries:
                    type: integer
                  cache_size_after:
                    type: integer
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    JobGenealogy:
      type: object
      required:
        - root_id
        - query_job_id
        - tree_scope
        - nodes
        - edges
      properties:
        root_id:
          type: string
          description: Root job ID of the genealogy tree
        query_job_id:
          type: string
          description: Job ID that was queried to build this tree
        tree_scope:
          type: string
          enum: [full, ancestors, descendants, blame, impact]
          description: Scope of the genealogy tree
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/GenealogyNode'
          description: All nodes in the genealogy tree
        edges:
          type: array
          items:
            $ref: '#/components/schemas/GenealogyEdge'
          description: All edges (relationships) in the tree
        generations:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: Jobs grouped by generation level
        total_nodes:
          type: integer
          minimum: 0
          description: Total number of nodes in the tree
        max_depth:
          type: integer
          minimum: 0
          description: Maximum depth of the tree
        max_breadth:
          type: integer
          minimum: 0
          description: Maximum breadth at any level
        success_rate:
          type: number
          minimum: 0
          maximum: 1
          description: Overall success rate of jobs in tree
        tree_span:
          type: string
          pattern: '^\\d+(\\.\\d+)?[smhd]$'
          description: Time span from oldest to newest job
        oldest_job:
          type: string
          format: date-time
          description: Timestamp of oldest job in tree
        newest_job:
          type: string
          format: date-time
          description: Timestamp of newest job in tree
        critical_path:
          type: array
          items:
            type: string
          description: Critical path through the genealogy
        failure_chain:
          type: array
          items:
            type: string
          description: Chain of failed jobs
        computed_at:
          type: string
          format: date-time
          description: When this genealogy was computed
        cache_key:
          type: string
          description: Cache key for this genealogy
        ttl:
          type: string
          pattern: '^\\d+(\\.\\d+)?[smhd]$'
          description: Time-to-live for cached genealogy

    GenealogyNode:
      type: object
      required:
        - job_id
        - job_type
        - status
        - generation
      properties:
        job_id:
          type: string
          description: Unique job identifier
        job_type:
          type: string
          description: Type of job
        status:
          type: string
          enum: [success, failed, processing, queued, cancelled]
          description: Current job status
        generation:
          type: integer
          minimum: 0
          description: Generation level in the tree (0 = root)
        parents:
          type: array
          items:
            type: string
          description: Parent job IDs
        children:
          type: array
          items:
            type: string
          description: Child job IDs
        siblings:
          type: array
          items:
            type: string
          description: Sibling job IDs
        display_name:
          type: string
          description: Human-readable name for display
        status_emoji:
          type: string
          description: Emoji representation of status
        duration:
          type: string
          pattern: '^\\d+(\\.\\d+)?[smhd]$'
          description: Job processing duration
        tree_x:
          type: integer
          description: X coordinate for tree layout
        tree_y:
          type: integer
          description: Y coordinate for tree layout
        collapsed:
          type: boolean
          default: false
          description: Whether node is collapsed in visualization
        highlighted:
          type: boolean
          default: false
          description: Whether node is highlighted

    GenealogyEdge:
      type: object
      required:
        - from_job_id
        - to_job_id
        - relationship
      properties:
        from_job_id:
          type: string
          description: Source job ID (parent)
        to_job_id:
          type: string
          description: Target job ID (child)
        relationship:
          $ref: '#/components/schemas/JobRelationship'
          description: Relationship details
        line_style:
          type: string
          enum: [solid, dashed, dotted, bold]
          default: solid
          description: Visual line style
        color:
          type: string
          description: Edge color for visualization
        thickness:
          type: integer
          minimum: 1
          maximum: 10
          default: 1
          description: Line thickness
        label:
          type: string
          description: Optional edge label

    JobRelationship:
      type: object
      required:
        - parent_id
        - child_id
        - type
        - timestamp
      properties:
        parent_id:
          type: string
          description: Parent job ID
        child_id:
          type: string
          description: Child job ID
        type:
          type: string
          enum: [retry, spawn, fork, callback, compensation, continuation, batch_member, dependency]
          description: Type of relationship
        spawn_reason:
          type: string
          description: Reason for creating this relationship
        timestamp:
          type: string
          format: date-time
          description: When relationship was created
        generation:
          type: integer
          minimum: 0
          description: Generation level of child
        depth:
          type: integer
          minimum: 0
          description: Depth from root
        payload_similarity:
          type: number
          minimum: 0
          maximum: 1
          description: Similarity score between parent and child payloads
        processing_context:
          type: object
          additionalProperties:
            type: string
          description: Additional context about the relationship
        created_at:
          type: string
          format: date-time
          description: Relationship creation timestamp
        ttl:
          type: string
          pattern: '^\\d+(\\.\\d+)?[smhd]$'
          description: Time-to-live for relationship data

    CreateRelationshipRequest:
      type: object
      required:
        - parent_id
        - child_id
        - type
      properties:
        parent_id:
          type: string
          description: Parent job ID
        child_id:
          type: string
          description: Child job ID
        type:
          type: string
          enum: [retry, spawn, fork, callback, compensation, continuation, batch_member, dependency]
          description: Type of relationship
        spawn_reason:
          type: string
          description: Reason for creating this relationship
        processing_context:
          type: object
          additionalProperties:
            type: string
          description: Additional context about the relationship
        ttl:
          type: string
          pattern: '^\\d+(\\.\\d+)?[smhd]$'
          description: Time-to-live for relationship data

    BlameAnalysis:
      type: object
      required:
        - source_job_id
        - blame_path
        - root_cause_job_id
      properties:
        source_job_id:
          type: string
          description: Job ID that was analyzed for blame
        blame_path:
          type: array
          items:
            type: string
          description: Path from failed job to root cause
        root_cause_job_id:
          type: string
          description: Job ID identified as root cause
        root_cause_reason:
          type: string
          description: Reason for root cause identification
        failure_cascade_count:
          type: integer
          minimum: 0
          description: Number of jobs affected by cascade failure
        analysis_confidence:
          type: number
          minimum: 0
          maximum: 1
          description: Confidence level of blame analysis
        contributing_factors:
          type: array
          items:
            type: string
          description: Additional factors that contributed to failure
        recommendations:
          type: array
          items:
            type: string
          description: Recommended actions to prevent recurrence
        similar_incidents:
          type: array
          items:
            type: string
          description: Job IDs of similar historical incidents
        computed_at:
          type: string
          format: date-time
          description: When this analysis was performed

    ImpactAnalysis:
      type: object
      required:
        - source_job_id
        - direct_children
        - total_descendants
      properties:
        source_job_id:
          type: string
          description: Job ID that was analyzed for impact
        direct_children:
          type: integer
          minimum: 0
          description: Number of direct child jobs
        total_descendants:
          type: integer
          minimum: 0
          description: Total number of descendant jobs
        affected_jobs:
          type: array
          items:
            type: string
          description: All job IDs affected by this job
        successful_jobs:
          type: integer
          minimum: 0
          description: Number of successful descendant jobs
        failed_jobs:
          type: integer
          minimum: 0
          description: Number of failed descendant jobs
        processing_jobs:
          type: integer
          minimum: 0
          description: Number of currently processing jobs
        queued_jobs:
          type: integer
          minimum: 0
          description: Number of queued descendant jobs
        total_processing_time:
          type: string
          pattern: '^\\d+(\\.\\d+)?[smhd]$'
          description: Total processing time of all descendants
        estimated_cost:
          type: number
          minimum: 0
          description: Estimated cost of all descendant processing
        resource_usage:
          $ref: '#/components/schemas/ResourceUsage'
          description: Resource usage metrics
        impact_time_span:
          type: string
          pattern: '^\\d+(\\.\\d+)?[smhd]$'
          description: Time span of impact
        cascade_delay:
          type: string
          pattern: '^\\d+(\\.\\d+)?[smhd]$'
          description: Delay before cascade effects
        recovery_estimate:
          type: string
          pattern: '^\\d+(\\.\\d+)?[smhd]$'
          description: Estimated time to recovery
        similar_incidents:
          type: array
          items:
            type: string
          description: Similar historical incidents
        recurrence_score:
          type: number
          minimum: 0
          maximum: 1
          description: Likelihood of recurrence
        computed_at:
          type: string
          format: date-time
          description: When this analysis was performed

    ResourceUsage:
      type: object
      properties:
        cpu_seconds:
          type: number
          minimum: 0
          description: Total CPU seconds consumed
        memory_mb_hours:
          type: number
          minimum: 0
          description: Memory usage in MB-hours
        network_mb:
          type: number
          minimum: 0
          description: Network data transferred in MB
        storage_io_ops:
          type: integer
          minimum: 0
          description: Storage I/O operations

    GenealogyPattern:
      type: object
      required:
        - pattern_id
        - pattern_type
        - frequency
      properties:
        pattern_id:
          type: string
          description: Unique pattern identifier
        pattern_type:
          type: string
          enum: [retry_chain, failure_fan, deep_nesting, wide_spread, cycle, anomaly]
          description: Type of detected pattern
        frequency:
          type: integer
          minimum: 1
          description: Number of times pattern was observed
        node_pattern:
          type: array
          items:
            $ref: '#/components/schemas/NodeTemplate'
          description: Node pattern template
        edge_pattern:
          type: array
          items:
            $ref: '#/components/schemas/EdgeTemplate'
          description: Edge pattern template
        structure_hash:
          type: string
          description: Hash of pattern structure
        first_seen:
          type: string
          format: date-time
          description: When pattern was first detected
        last_seen:
          type: string
          format: date-time
          description: When pattern was last observed
        occurrences:
          type: array
          items:
            type: string
          description: Job IDs where pattern was found
        success_rate:
          type: number
          minimum: 0
          maximum: 1
          description: Success rate for this pattern
        avg_duration:
          type: string
          pattern: '^\\d+(\\.\\d+)?[smhd]$'
          description: Average duration for pattern execution
        failure_reasons:
          type: object
          additionalProperties:
            type: integer
          description: Failure reasons and their frequencies
        recommendations:
          type: array
          items:
            type: string
          description: Recommendations for pattern optimization
        confidence:
          type: number
          minimum: 0
          maximum: 1
          description: Confidence in pattern detection

    NodeTemplate:
      type: object
      properties:
        job_type_pattern:
          type: string
          description: Regular expression for job type matching
        status_pattern:
          type: string
          description: Status pattern for matching
        position_pattern:
          type: string
          enum: [root, leaf, middle, any]
          description: Position in tree
        constraints:
          type: array
          items:
            type: string
          description: Additional constraints for matching

    EdgeTemplate:
      type: object
      properties:
        relationship_type:
          type: string
          enum: [retry, spawn, fork, callback, compensation, continuation, batch_member, dependency]
          description: Required relationship type
        direction:
          type: string
          enum: [parent_to_child, child_to_parent, bidirectional]
          description: Direction of relationship
        required:
          type: boolean
          default: true
          description: Whether this edge is required for pattern match
        multiplicity:
          type: string
          enum: [one, many, optional]
          description: Edge multiplicity

    PatternDetectionMetadata:
      type: object
      properties:
        detection_algorithm:
          type: string
          description: Algorithm used for pattern detection
        analysis_window:
          type: string
          pattern: '^\\d+(\\.\\d+)?[smhd]$'
          description: Time window analyzed
        total_trees_analyzed:
          type: integer
          minimum: 0
          description: Number of genealogy trees analyzed
        detection_time:
          type: string
          pattern: '^\\d+(\\.\\d+)?[smhd]$'
          description: Time taken for pattern detection
        confidence_threshold:
          type: number
          minimum: 0
          maximum: 1
          description: Confidence threshold used

    SearchResult:
      type: object
      required:
        - id
        - type
        - score
      properties:
        id:
          type: string
          description: Result identifier
        type:
          type: string
          enum: [job, relationship, pattern, tree]
          description: Type of search result
        score:
          type: number
          minimum: 0
          maximum: 1
          description: Relevance score
        title:
          type: string
          description: Result title
        description:
          type: string
          description: Result description
        metadata:
          type: object
          description: Additional result metadata
        highlight:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          description: Highlighted matching text

    SearchMetadata:
      type: object
      properties:
        query_time:
          type: string
          pattern: '^\\d+(\\.\\d+)?[smhd]$'
          description: Query execution time
        total_hits:
          type: integer
          minimum: 0
          description: Total number of matching results
        index_coverage:
          type: number
          minimum: 0
          maximum: 1
          description: Percentage of index covered by search

    GenealogyStatistics:
      type: object
      properties:
        time_range:
          type: string
          description: Time range for statistics
        total_jobs:
          type: integer
          minimum: 0
          description: Total number of jobs tracked
        total_relationships:
          type: integer
          minimum: 0
          description: Total number of relationships
        avg_tree_size:
          type: number
          minimum: 0
          description: Average genealogy tree size
        max_tree_size:
          type: integer
          minimum: 0
          description: Largest genealogy tree size
        avg_tree_depth:
          type: number
          minimum: 0
          description: Average tree depth
        max_tree_depth:
          type: integer
          minimum: 0
          description: Maximum tree depth observed
        relationship_type_distribution:
          type: object
          additionalProperties:
            type: integer
          description: Distribution of relationship types
        success_rate_by_generation:
          type: object
          additionalProperties:
            type: number
          description: Success rates by generation level
        performance_metrics:
          type: object
          properties:
            avg_tree_build_time:
              type: string
              pattern: '^\\d+(\\.\\d+)?[smhd]$'
            cache_hit_rate:
              type: number
              minimum: 0
              maximum: 1
            queries_per_second:
              type: number
              minimum: 0

    HealthStatus:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
          description: Overall system health
        uptime:
          type: string
          pattern: '^\\d+[dhms]+$'
          description: System uptime
        cache_hit_rate:
          type: number
          minimum: 0
          maximum: 1
          description: Cache hit rate
        avg_tree_build_time:
          type: string
          pattern: '^\\d+(\\.\\d+)?[smhd]$'
          description: Average tree build time
        relationships_tracked:
          type: integer
          minimum: 0
          description: Total relationships being tracked
        active_trees:
          type: integer
          minimum: 0
          description: Number of active genealogy trees
        components:
          type: object
          properties:
            graph_storage:
              type: string
              enum: [healthy, degraded, unhealthy]
            tree_builder:
              type: string
              enum: [healthy, degraded, unhealthy]
            pattern_detector:
              type: string
              enum: [healthy, degraded, unhealthy]
            cache_layer:
              type: string
              enum: [healthy, degraded, unhealthy]

    PaginationInfo:
      type: object
      properties:
        limit:
          type: integer
          description: Items per page
        offset:
          type: integer
          description: Items skipped
        total:
          type: integer
          description: Total items available
        has_more:
          type: boolean
          description: Whether more items are available

    Error:
      type: object
      required:
        - error
        - code
        - timestamp
      properties:
        error:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
        details:
          type: object
          description: Additional error details
        timestamp:
          type: string
          format: date-time
          description: Error timestamp

  responses:
    BadRequest:
      description: Invalid request parameters or body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Forbidden:
      description: Insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

tags:
  - name: Tree Visualization
    description: Job genealogy tree construction and visualization
  - name: Relationships
    description: Job relationship management and tracking
  - name: Analysis
    description: Blame and impact analysis tools
  - name: Patterns
    description: Genealogy pattern detection and analysis
  - name: Search
    description: Search across genealogy data
  - name: Export
    description: Data export capabilities
  - name: Statistics
    description: System-wide genealogy statistics
  - name: System
    description: System health and management
  - name: Cache Management
    description: Cache management operations